{"version":3,"sources":["webpack:///static/js/27.efbb8a610760cf02f25d.js","webpack:///./docs/pages/extensions/cleavejs/examples/ExFormat.vue","webpack:///./docs/pages/extensions/cleavejs/Cleavejs.vue?e653","webpack:///./docs/pages/extensions/cleavejs/examples/ExFormat.vue?b21f","webpack:///./docs/pages/extensions/cleavejs/Cleavejs.vue","webpack:///ExFormat.vue","webpack:///./~/cleave.js/dist/cleave.js","webpack:///./docs/pages/extensions/cleavejs/examples/ExFormat.vue?5589","webpack:///Cleavejs.vue"],"names":["webpackJsonp","1023","module","exports","1056","render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_m","attrs","component","ExFormat","code","ExFormatCode","vertical","type","expanded","staticRenderFns","href","target","227","__webpack_require__","Component","258","740","__webpack_exports__","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0_cleave_js__","__WEBPACK_IMPORTED_MODULE_0_cleave_js___default","n","cleave","name","bind","el","binding","input","querySelector","_vCleave","a","update","destroy","unbind","directives","data","rawValue","masks","creditCard","numeral","numeralThousandsGroupStyle","prefix","custom","delimiters","blocks","numericOnly","methods","getRawValue","event","743","root","factory","modules","moduleId","installedModules","id","loaded","call","m","c","p","global","Cleave","element","opts","owner","document","length","Error","initValue","properties","DefaultProperties","assign","init","prototype","pps","phone","date","blocksLength","onInput","maxLength","Util","getMaxLength","isAndroid","lastInputValue","onChangeListener","onChange","onKeyDownListener","onKeyDown","onCutListener","onCut","onCopyListener","onCopy","addEventListener","initPhoneFormatter","initDateFormatter","initNumeralFormatter","noImmediatePrefix","numeralFormatter","NumeralFormatter","numeralDecimalMark","numeralIntegerScale","numeralDecimalScale","numeralPositiveOnly","stripLeadingZeroes","delimiter","dateFormatter","DateFormatter","datePattern","getBlocks","phoneFormatter","PhoneFormatter","AsYouTypeFormatter","phoneRegionCode","ex","charCode","which","keyCode","currentValue","isAndroidBackspaceKeydown","isDelimiter","slice","delimiterLength","backspace","e","copyClipboardData","inputValue","textToCopy","copyDelimiter","stripDelimiters","clipboardData","setData","window","preventDefault","headStr","result","format","updateValueState","getValidatedDate","getPrefixStrippedValue","prefixLength","strip","uppercase","toUpperCase","lowercase","toLowerCase","updateCreditCardPropsByValue","getFormattedValue","delimiterLazyShow","creditCardInfo","CreditCardDetector","getInfo","creditCardStrictMode","creditCardType","onCreditCardTypeChanged","setCurrentSelection","endPos","oldValue","elem","activeElement","createTextRange","range","move","select","setSelectionRange","selectionEnd","setTimeout","setPhoneRegionCode","setRawValue","undefined","toString","replace","rawValueTrimPrefix","getISOFormatDate","removeEventListener","groupStyle","thousand","delimiterRE","RegExp","lakh","wan","none","parts","partInteger","partDecimal","indexOf","split","initBlocks","forEach","push","addLeadingZero","index","sub","sub0","rest","parseInt","getFixedDateString","day","month","year","dayIndex","monthIndex","yearIndex","dayStartIndex","monthStartIndex","yearStartIndex","getFixedDate","reduce","previous","current","Math","min","isLeapYear","number","formatter","setFormatter","phoneNumber","clear","validated","i","iMax","inputDigit","charAt","test","uatp","amex","diners","discover","mastercard","dankort","instapayment","jcb","maestro","visa","mir","general","unionPay","generalStrict","re","strictMode","key","block","noop","letter","some","getDelimiterREByDelimiter","str","diffIndex","getFirstDiffIndex","prev","currentDelimiter","multipleDelimiters","navigator","userAgent","currentInputValue","827","rawName","expression","placeholder","addons","nativeOn","$event","model","callback","$$v","_s","904","__WEBPACK_IMPORTED_MODULE_0__examples_ExFormat__","__WEBPACK_IMPORTED_MODULE_0__examples_ExFormat___default","__WEBPACK_IMPORTED_MODULE_1__raw_loader_examples_ExFormat__","__WEBPACK_IMPORTED_MODULE_1__raw_loader_examples_ExFormat___default"],"mappings":"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","file":"static/js/27.efbb8a610760cf02f25d.js","sourcesContent":["webpackJsonp([27,34],{\n\n/***/ 1023:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<template>\\n    <section>\\n        <b-field>\\n            <b-input\\n                placeholder=\\\"Credit Card\\\"\\n                v-cleave=\\\"masks.creditCard\\\">\\n            </b-input>\\n        </b-field>\\n\\n        <b-field>\\n            <b-input\\n                placeholder=\\\"Numeral\\\"\\n                v-cleave=\\\"masks.numeral\\\">\\n            </b-input>\\n        </b-field>\\n\\n        <b-field :addons=\\\"false\\\">\\n            <b-input\\n                placeholder=\\\"Custom\\\"\\n                v-model=\\\"value\\\"\\n                v-cleave=\\\"masks.custom\\\"\\n                @input.native=\\\"getRawValue\\\">\\n            </b-input>\\n            <p><b>Formatted value (v-model)</b>: {{ value }}</p>\\n            <p><b>Raw value</b>: {{ rawValue }}</p>\\n        </b-field>\\n    </section>\\n</template>\\n\\n<script>\\n    // You have to install cleave.js to use it:\\n    // 'npm install cleave.js'\\n    import Cleave from 'cleave.js'\\n\\n    /**\\n     * We add a new instance of Cleave when the element\\n     * is bound or updated, and destroy it when it's unbound.\\n     */\\n    const cleave = {\\n        name: 'cleave',\\n        bind(el, binding) {\\n            const input = el.querySelector('input')\\n            input._vCleave = new Cleave(input, binding.value)\\n        },\\n        update(el, binding) {\\n            const input = el.querySelector('input')\\n            input._vCleave.destroy()\\n            input._vCleave = new Cleave(input, binding.value)\\n        },\\n        unbind(el) {\\n            const input = el.querySelector('input')\\n            input._vCleave.destroy()\\n        }\\n    }\\n\\n    export default {\\n        directives: { cleave },\\n        data() {\\n            return {\\n                value: '',\\n                rawValue: '',\\n                masks: {\\n                    creditCard: { creditCard: true },\\n                    numeral: {\\n                        numeral: true,\\n                        numeralThousandsGroupStyle: 'thousand',\\n                        prefix: '$ '\\n                    },\\n                    custom: {\\n                        delimiters: ['.', '.', '-'],\\n                        blocks: [3, 3, 3, 2],\\n                        numericOnly: true\\n                    }\\n                }\\n            }\\n        },\\n        methods: {\\n            getRawValue(event) {\\n                this.rawValue = event.target._vCleave.getRawValue()\\n            }\\n        }\\n    }\\n</script>\\n\"\n\n/***/ }),\n\n/***/ 1056:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"default-container\"\n  }, [_c('h1', {\n    staticClass: \"title is-spaced\"\n  }, [_vm._v(\"Cleave.js \")]), _vm._v(\" \"), _c('h2', {\n    staticClass: \"subtitle\"\n  }, [_vm._v(\"Format input text while you type — as a Vue directive\")]), _vm._v(\" \"), _vm._m(0), _vm._v(\" \"), _c('Example', {\n    attrs: {\n      \"component\": _vm.ExFormat,\n      \"code\": _vm.ExFormatCode,\n      \"vertical\": \"\"\n    }\n  }, [_c('b-message', {\n    attrs: {\n      \"type\": \"is-info\"\n    }\n  }, [_c('p', [_c('strong', [_vm._v(\"Cleave.js is not included in Buefy\")]), _vm._v(\", you have to install it:\")]), _vm._v(\" \"), _c('CodeView', {\n    attrs: {\n      \"code\": \"npm install cleave.js\",\n      \"expanded\": \"\"\n    }\n  })], 1)], 1)], 1)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"buttons\"\n  }, [_c('a', {\n    staticClass: \"button\",\n    attrs: {\n      \"href\": \"https://nosir.github.io/cleave.js\",\n      \"target\": \"_blank\"\n    }\n  }, [_vm._v(\"\\n            Website\\n        \")]), _vm._v(\" \"), _c('a', {\n    staticClass: \"button\",\n    attrs: {\n      \"href\": \"https://github.com/nosir/cleave.js/blob/master/doc/options.md\",\n      \"target\": \"_blank\"\n    }\n  }, [_vm._v(\"\\n            Docs\\n        \")])])\n}]}\n\n/***/ }),\n\n/***/ 227:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(0)(\n  /* script */\n  __webpack_require__(740),\n  /* template */\n  __webpack_require__(827),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 258:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(0)(\n  /* script */\n  __webpack_require__(904),\n  /* template */\n  __webpack_require__(1056),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 740:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_cleave_js__ = __webpack_require__(743);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_cleave_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_cleave_js__);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// You have to install cleave.js to use it:\n// 'npm install cleave.js'\n\n\n/**\n * We add a new instance of Cleave when the element\n * is bound or updated, and destroy it when it's unbound.\n */\nvar cleave = {\n    name: 'cleave',\n    bind: function bind(el, binding) {\n        var input = el.querySelector('input');\n        input._vCleave = new __WEBPACK_IMPORTED_MODULE_0_cleave_js___default.a(input, binding.value);\n    },\n    update: function update(el, binding) {\n        var input = el.querySelector('input');\n        input._vCleave.destroy();\n        input._vCleave = new __WEBPACK_IMPORTED_MODULE_0_cleave_js___default.a(input, binding.value);\n    },\n    unbind: function unbind(el) {\n        var input = el.querySelector('input');\n        input._vCleave.destroy();\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    directives: { cleave: cleave },\n    data: function data() {\n        return {\n            value: '',\n            rawValue: '',\n            masks: {\n                creditCard: { creditCard: true },\n                numeral: {\n                    numeral: true,\n                    numeralThousandsGroupStyle: 'thousand',\n                    prefix: '$ '\n                },\n                custom: {\n                    delimiters: ['.', '.', '-'],\n                    blocks: [3, 3, 3, 2],\n                    numericOnly: true\n                }\n            }\n        };\n    },\n\n    methods: {\n        getRawValue: function getRawValue(event) {\n            this.rawValue = event.target._vCleave.getRawValue();\n        }\n    }\n});\n\n/***/ }),\n\n/***/ 743:\n/***/ (function(module, exports, __webpack_require__) {\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Cleave\"] = factory();\n\telse\n\t\troot[\"Cleave\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\n\t/**\n\t * Construct a new Cleave instance by passing the configuration object\n\t *\n\t * @param {String | HTMLElement} element\n\t * @param {Object} opts\n\t */\n\tvar Cleave = function (element, opts) {\n\t    var owner = this;\n\n\t    if (typeof element === 'string') {\n\t        owner.element = document.querySelector(element);\n\t    } else {\n\t        owner.element = ((typeof element.length !== 'undefined') && element.length > 0) ? element[0] : element;\n\t    }\n\n\t    if (!owner.element) {\n\t        throw new Error('[cleave.js] Please check the element');\n\t    }\n\n\t    opts.initValue = owner.element.value;\n\n\t    owner.properties = Cleave.DefaultProperties.assign({}, opts);\n\n\t    owner.init();\n\t};\n\n\tCleave.prototype = {\n\t    init: function () {\n\t        var owner = this, pps = owner.properties;\n\n\t        // no need to use this lib\n\t        if (!pps.numeral && !pps.phone && !pps.creditCard && !pps.date && (pps.blocksLength === 0 && !pps.prefix)) {\n\t            owner.onInput(pps.initValue);\n\n\t            return;\n\t        }\n\n\t        pps.maxLength = Cleave.Util.getMaxLength(pps.blocks);\n\n\t        owner.isAndroid = Cleave.Util.isAndroid();\n\t        owner.lastInputValue = '';\n\n\t        owner.onChangeListener = owner.onChange.bind(owner);\n\t        owner.onKeyDownListener = owner.onKeyDown.bind(owner);\n\t        owner.onCutListener = owner.onCut.bind(owner);\n\t        owner.onCopyListener = owner.onCopy.bind(owner);\n\n\t        owner.element.addEventListener('input', owner.onChangeListener);\n\t        owner.element.addEventListener('keydown', owner.onKeyDownListener);\n\t        owner.element.addEventListener('cut', owner.onCutListener);\n\t        owner.element.addEventListener('copy', owner.onCopyListener);\n\n\n\t        owner.initPhoneFormatter();\n\t        owner.initDateFormatter();\n\t        owner.initNumeralFormatter();\n\n\t        // avoid touch input field if value is null\n\t        // otherwise Firefox will add red box-shadow for <input required />\n\t        if (pps.initValue || (pps.prefix && !pps.noImmediatePrefix)) {\n\t            owner.onInput(pps.initValue);\n\t        }\n\t    },\n\n\t    initNumeralFormatter: function () {\n\t        var owner = this, pps = owner.properties;\n\n\t        if (!pps.numeral) {\n\t            return;\n\t        }\n\n\t        pps.numeralFormatter = new Cleave.NumeralFormatter(\n\t            pps.numeralDecimalMark,\n\t            pps.numeralIntegerScale,\n\t            pps.numeralDecimalScale,\n\t            pps.numeralThousandsGroupStyle,\n\t            pps.numeralPositiveOnly,\n\t            pps.stripLeadingZeroes,\n\t            pps.delimiter\n\t        );\n\t    },\n\n\t    initDateFormatter: function () {\n\t        var owner = this, pps = owner.properties;\n\n\t        if (!pps.date) {\n\t            return;\n\t        }\n\n\t        pps.dateFormatter = new Cleave.DateFormatter(pps.datePattern);\n\t        pps.blocks = pps.dateFormatter.getBlocks();\n\t        pps.blocksLength = pps.blocks.length;\n\t        pps.maxLength = Cleave.Util.getMaxLength(pps.blocks);\n\t    },\n\n\t    initPhoneFormatter: function () {\n\t        var owner = this, pps = owner.properties;\n\n\t        if (!pps.phone) {\n\t            return;\n\t        }\n\n\t        // Cleave.AsYouTypeFormatter should be provided by\n\t        // external google closure lib\n\t        try {\n\t            pps.phoneFormatter = new Cleave.PhoneFormatter(\n\t                new pps.root.Cleave.AsYouTypeFormatter(pps.phoneRegionCode),\n\t                pps.delimiter\n\t            );\n\t        } catch (ex) {\n\t            throw new Error('[cleave.js] Please include phone-type-formatter.{country}.js lib');\n\t        }\n\t    },\n\n\t    onKeyDown: function (event) {\n\t        var owner = this, pps = owner.properties,\n\t            charCode = event.which || event.keyCode,\n\t            Util = Cleave.Util,\n\t            currentValue = owner.element.value;\n\n\t        if (Util.isAndroidBackspaceKeydown(owner.lastInputValue, currentValue)) {\n\t            charCode = 8;\n\t        }\n\n\t        owner.lastInputValue = currentValue;\n\n\t        // hit backspace when last character is delimiter\n\t        if (charCode === 8 && Util.isDelimiter(currentValue.slice(-pps.delimiterLength), pps.delimiter, pps.delimiters)) {\n\t            pps.backspace = true;\n\n\t            return;\n\t        }\n\n\t        pps.backspace = false;\n\t    },\n\n\t    onChange: function () {\n\t        this.onInput(this.element.value);\n\t    },\n\n\t    onCut: function (e) {\n\t        this.copyClipboardData(e);\n\t        this.onInput('');\n\t    },\n\n\t    onCopy: function (e) {\n\t        this.copyClipboardData(e);\n\t    },\n\n\t    copyClipboardData: function (e) {\n\t        var owner = this,\n\t            pps = owner.properties,\n\t            Util = Cleave.Util,\n\t            inputValue = owner.element.value,\n\t            textToCopy = '';\n\n\t        if (!pps.copyDelimiter) {\n\t            textToCopy = Util.stripDelimiters(inputValue, pps.delimiter, pps.delimiters);\n\t        } else {\n\t            textToCopy = inputValue;\n\t        }\n\n\t        try {\n\t            if (e.clipboardData) {\n\t                e.clipboardData.setData('Text', textToCopy);\n\t            } else {\n\t                window.clipboardData.setData('Text', textToCopy);\n\t            }\n\n\t            e.preventDefault();\n\t        } catch (ex) {\n\t            //  empty\n\t        }\n\t    },\n\n\t    onInput: function (value) {\n\t        var owner = this, pps = owner.properties,\n\t            Util = Cleave.Util;\n\n\t        // case 1: delete one more character \"4\"\n\t        // 1234*| -> hit backspace -> 123|\n\t        // case 2: last character is not delimiter which is:\n\t        // 12|34* -> hit backspace -> 1|34*\n\t        // note: no need to apply this for numeral mode\n\t        if (!pps.numeral && pps.backspace && !Util.isDelimiter(value.slice(-pps.delimiterLength), pps.delimiter, pps.delimiters)) {\n\t            value = Util.headStr(value, value.length - pps.delimiterLength);\n\t        }\n\n\t        // phone formatter\n\t        if (pps.phone) {\n\t            if (pps.prefix && (!pps.noImmediatePrefix || value.length)) {\n\t                pps.result = pps.prefix + pps.phoneFormatter.format(value).slice(pps.prefix.length);\n\t            } else {\n\t                pps.result = pps.phoneFormatter.format(value);\n\t            }\n\t            owner.updateValueState();\n\n\t            return;\n\t        }\n\n\t        // numeral formatter\n\t        if (pps.numeral) {\n\t            if (pps.prefix && (!pps.noImmediatePrefix || value.length)) {\n\t                pps.result = pps.prefix + pps.numeralFormatter.format(value);\n\t            } else {\n\t                pps.result = pps.numeralFormatter.format(value);\n\t            }\n\t            owner.updateValueState();\n\n\t            return;\n\t        }\n\n\t        // date\n\t        if (pps.date) {\n\t            value = pps.dateFormatter.getValidatedDate(value);\n\t        }\n\n\t        // strip delimiters\n\t        value = Util.stripDelimiters(value, pps.delimiter, pps.delimiters);\n\n\t        // strip prefix\n\t        value = Util.getPrefixStrippedValue(value, pps.prefix, pps.prefixLength);\n\n\t        // strip non-numeric characters\n\t        value = pps.numericOnly ? Util.strip(value, /[^\\d]/g) : value;\n\n\t        // convert case\n\t        value = pps.uppercase ? value.toUpperCase() : value;\n\t        value = pps.lowercase ? value.toLowerCase() : value;\n\n\t        // prefix\n\t        if (pps.prefix && (!pps.noImmediatePrefix || value.length)) {\n\t            value = pps.prefix + value;\n\n\t            // no blocks specified, no need to do formatting\n\t            if (pps.blocksLength === 0) {\n\t                pps.result = value;\n\t                owner.updateValueState();\n\n\t                return;\n\t            }\n\t        }\n\n\t        // update credit card props\n\t        if (pps.creditCard) {\n\t            owner.updateCreditCardPropsByValue(value);\n\t        }\n\n\t        // strip over length characters\n\t        value = Util.headStr(value, pps.maxLength);\n\n\t        // apply blocks\n\t        pps.result = Util.getFormattedValue(\n\t            value,\n\t            pps.blocks, pps.blocksLength,\n\t            pps.delimiter, pps.delimiters, pps.delimiterLazyShow\n\t        );\n\n\t        owner.updateValueState();\n\t    },\n\n\t    updateCreditCardPropsByValue: function (value) {\n\t        var owner = this, pps = owner.properties,\n\t            Util = Cleave.Util,\n\t            creditCardInfo;\n\n\t        // At least one of the first 4 characters has changed\n\t        if (Util.headStr(pps.result, 4) === Util.headStr(value, 4)) {\n\t            return;\n\t        }\n\n\t        creditCardInfo = Cleave.CreditCardDetector.getInfo(value, pps.creditCardStrictMode);\n\n\t        pps.blocks = creditCardInfo.blocks;\n\t        pps.blocksLength = pps.blocks.length;\n\t        pps.maxLength = Util.getMaxLength(pps.blocks);\n\n\t        // credit card type changed\n\t        if (pps.creditCardType !== creditCardInfo.type) {\n\t            pps.creditCardType = creditCardInfo.type;\n\n\t            pps.onCreditCardTypeChanged.call(owner, pps.creditCardType);\n\t        }\n\t    },\n\n\t    setCurrentSelection: function (endPos, oldValue) {\n\t        var elem = this.element;\n\n\t        // If cursor was at the end of value, just place it back.\n\t        // Because new value could contain additional chars.\n\t        if (oldValue.length !== endPos && elem === document.activeElement) {\n\t          if ( elem.createTextRange ) {\n\t            var range = elem.createTextRange();\n\n\t            range.move('character', endPos);\n\t            range.select();\n\t          } else {\n\t            elem.setSelectionRange(endPos, endPos);\n\t          }\n\t        }\n\t    },\n\n\t    updateValueState: function () {\n\t        var owner = this;\n\n\t        if (!owner.element) {\n\t            return;\n\t        }\n\n\t        var endPos = owner.element.selectionEnd;\n\t        var oldValue = owner.element.value;\n\n\t        // fix Android browser type=\"text\" input field\n\t        // cursor not jumping issue\n\t        if (owner.isAndroid) {\n\t            window.setTimeout(function () {\n\t                owner.element.value = owner.properties.result;\n\t                owner.setCurrentSelection(endPos, oldValue);\n\t            }, 1);\n\n\t            return;\n\t        }\n\n\t        owner.element.value = owner.properties.result;\n\t        owner.setCurrentSelection(endPos, oldValue);\n\t    },\n\n\t    setPhoneRegionCode: function (phoneRegionCode) {\n\t        var owner = this, pps = owner.properties;\n\n\t        pps.phoneRegionCode = phoneRegionCode;\n\t        owner.initPhoneFormatter();\n\t        owner.onChange();\n\t    },\n\n\t    setRawValue: function (value) {\n\t        var owner = this, pps = owner.properties;\n\n\t        value = value !== undefined && value !== null ? value.toString() : '';\n\n\t        if (pps.numeral) {\n\t            value = value.replace('.', pps.numeralDecimalMark);\n\t        }\n\n\t        pps.backspace = false;\n\t        \n\t        owner.element.value = value;\n\t        owner.onInput(value);\n\t    },\n\n\t    getRawValue: function () {\n\t        var owner = this,\n\t            pps = owner.properties,\n\t            Util = Cleave.Util,\n\t            rawValue = owner.element.value;\n\n\t        if (pps.rawValueTrimPrefix) {\n\t            rawValue = Util.getPrefixStrippedValue(rawValue, pps.prefix, pps.prefixLength);\n\t        }\n\n\t        if (pps.numeral) {\n\t            rawValue = pps.numeralFormatter.getRawValue(rawValue);\n\t        } else {\n\t            rawValue = Util.stripDelimiters(rawValue, pps.delimiter, pps.delimiters);\n\t        }\n\n\t        return rawValue;\n\t    },\n\n\t    getISOFormatDate: function () {\n\t        var owner = this,\n\t            pps = owner.properties;\n\n\t        return pps.date ? pps.dateFormatter.getISOFormatDate() : '';\n\t    },\n\n\t    getFormattedValue: function () {\n\t        return this.element.value;\n\t    },\n\n\t    destroy: function () {\n\t        var owner = this;\n\n\t        owner.element.removeEventListener('input', owner.onChangeListener);\n\t        owner.element.removeEventListener('keydown', owner.onKeyDownListener);\n\t        owner.element.removeEventListener('cut', owner.onCutListener);\n\t        owner.element.removeEventListener('copy', owner.onCopyListener);\n\t    },\n\n\t    toString: function () {\n\t        return '[Cleave Object]';\n\t    }\n\t};\n\n\tCleave.NumeralFormatter = __webpack_require__(1);\n\tCleave.DateFormatter = __webpack_require__(2);\n\tCleave.PhoneFormatter = __webpack_require__(3);\n\tCleave.CreditCardDetector = __webpack_require__(4);\n\tCleave.Util = __webpack_require__(5);\n\tCleave.DefaultProperties = __webpack_require__(6);\n\n\t// for angular directive\n\t((typeof global === 'object' && global) ? global : window)['Cleave'] = Cleave;\n\n\t// CommonJS\n\tmodule.exports = Cleave;\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\tvar NumeralFormatter = function (numeralDecimalMark,\n\t                                 numeralIntegerScale,\n\t                                 numeralDecimalScale,\n\t                                 numeralThousandsGroupStyle,\n\t                                 numeralPositiveOnly,\n\t                                 stripLeadingZeroes,\n\t                                 delimiter) {\n\t    var owner = this;\n\n\t    owner.numeralDecimalMark = numeralDecimalMark || '.';\n\t    owner.numeralIntegerScale = numeralIntegerScale > 0 ? numeralIntegerScale : 0;\n\t    owner.numeralDecimalScale = numeralDecimalScale >= 0 ? numeralDecimalScale : 2;\n\t    owner.numeralThousandsGroupStyle = numeralThousandsGroupStyle || NumeralFormatter.groupStyle.thousand;\n\t    owner.numeralPositiveOnly = !!numeralPositiveOnly;\n\t    owner.stripLeadingZeroes = stripLeadingZeroes !== false;\n\t    owner.delimiter = (delimiter || delimiter === '') ? delimiter : ',';\n\t    owner.delimiterRE = delimiter ? new RegExp('\\\\' + delimiter, 'g') : '';\n\t};\n\n\tNumeralFormatter.groupStyle = {\n\t    thousand: 'thousand',\n\t    lakh:     'lakh',\n\t    wan:      'wan',\n\t    none:     'none'    \n\t};\n\n\tNumeralFormatter.prototype = {\n\t    getRawValue: function (value) {\n\t        return value.replace(this.delimiterRE, '').replace(this.numeralDecimalMark, '.');\n\t    },\n\n\t    format: function (value) {\n\t        var owner = this, parts, partInteger, partDecimal = '';\n\n\t        // strip alphabet letters\n\t        value = value.replace(/[A-Za-z]/g, '')\n\t            // replace the first decimal mark with reserved placeholder\n\t            .replace(owner.numeralDecimalMark, 'M')\n\n\t            // strip non numeric letters except minus and \"M\"\n\t            // this is to ensure prefix has been stripped\n\t            .replace(/[^\\dM-]/g, '')\n\n\t            // replace the leading minus with reserved placeholder\n\t            .replace(/^\\-/, 'N')\n\n\t            // strip the other minus sign (if present)\n\t            .replace(/\\-/g, '')\n\n\t            // replace the minus sign (if present)\n\t            .replace('N', owner.numeralPositiveOnly ? '' : '-')\n\n\t            // replace decimal mark\n\t            .replace('M', owner.numeralDecimalMark);\n\n\t        // strip any leading zeros\n\t        if (owner.stripLeadingZeroes) {\n\t            value = value.replace(/^(-)?0+(?=\\d)/, '$1');\n\t        }\n\n\t        partInteger = value;\n\n\t        if (value.indexOf(owner.numeralDecimalMark) >= 0) {\n\t            parts = value.split(owner.numeralDecimalMark);\n\t            partInteger = parts[0];\n\t            partDecimal = owner.numeralDecimalMark + parts[1].slice(0, owner.numeralDecimalScale);\n\t        }\n\n\t        if (owner.numeralIntegerScale > 0) {\n\t          partInteger = partInteger.slice(0, owner.numeralIntegerScale + (value.slice(0, 1) === '-' ? 1 : 0));\n\t        }\n\n\t        switch (owner.numeralThousandsGroupStyle) {\n\t        case NumeralFormatter.groupStyle.lakh:\n\t            partInteger = partInteger.replace(/(\\d)(?=(\\d\\d)+\\d$)/g, '$1' + owner.delimiter);\n\n\t            break;\n\n\t        case NumeralFormatter.groupStyle.wan:\n\t            partInteger = partInteger.replace(/(\\d)(?=(\\d{4})+$)/g, '$1' + owner.delimiter);\n\n\t            break;\n\n\t        case NumeralFormatter.groupStyle.thousand:\n\t            partInteger = partInteger.replace(/(\\d)(?=(\\d{3})+$)/g, '$1' + owner.delimiter);\n\n\t            break;\n\t        }\n\n\t        return partInteger.toString() + (owner.numeralDecimalScale > 0 ? partDecimal.toString() : '');\n\t    }\n\t};\n\n\tmodule.exports = NumeralFormatter;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\tvar DateFormatter = function (datePattern) {\n\t    var owner = this;\n\n\t    owner.date = [];\n\t    owner.blocks = [];\n\t    owner.datePattern = datePattern;\n\t    owner.initBlocks();\n\t};\n\n\tDateFormatter.prototype = {\n\t    initBlocks: function () {\n\t        var owner = this;\n\t        owner.datePattern.forEach(function (value) {\n\t            if (value === 'Y') {\n\t                owner.blocks.push(4);\n\t            } else {\n\t                owner.blocks.push(2);\n\t            }\n\t        });\n\t    },\n\n\t    getISOFormatDate: function () {\n\t        var owner = this,\n\t            date = owner.date;\n\n\t        return date[2] ? (\n\t            date[2] + '-' + owner.addLeadingZero(date[1]) + '-' + owner.addLeadingZero(date[0])\n\t        ) : '';\n\t    },\n\n\t    getBlocks: function () {\n\t        return this.blocks;\n\t    },\n\n\t    getValidatedDate: function (value) {\n\t        var owner = this, result = '';\n\n\t        value = value.replace(/[^\\d]/g, '');\n\n\t        owner.blocks.forEach(function (length, index) {\n\t            if (value.length > 0) {\n\t                var sub = value.slice(0, length),\n\t                    sub0 = sub.slice(0, 1),\n\t                    rest = value.slice(length);\n\n\t                switch (owner.datePattern[index]) {\n\t                case 'd':\n\t                    if (sub === '00') {\n\t                        sub = '01';\n\t                    } else if (parseInt(sub0, 10) > 3) {\n\t                        sub = '0' + sub0;\n\t                    } else if (parseInt(sub, 10) > 31) {\n\t                        sub = '31';\n\t                    }\n\n\t                    break;\n\n\t                case 'm':\n\t                    if (sub === '00') {\n\t                        sub = '01';\n\t                    } else if (parseInt(sub0, 10) > 1) {\n\t                        sub = '0' + sub0;\n\t                    } else if (parseInt(sub, 10) > 12) {\n\t                        sub = '12';\n\t                    }\n\n\t                    break;\n\t                }\n\n\t                result += sub;\n\n\t                // update remaining string\n\t                value = rest;\n\t            }\n\t        });\n\n\t        return this.getFixedDateString(result);\n\t    },\n\n\t    getFixedDateString: function (value) {\n\t        var owner = this, datePattern = owner.datePattern, date = [],\n\t            dayIndex = 0, monthIndex = 0, yearIndex = 0,\n\t            dayStartIndex = 0, monthStartIndex = 0, yearStartIndex = 0,\n\t            day, month, year;\n\n\t        // mm-dd || dd-mm\n\t        if (value.length === 4 && datePattern[0].toLowerCase() !== 'y' && datePattern[1].toLowerCase() !== 'y') {\n\t            dayStartIndex = datePattern[0] === 'd' ? 0 : 2;\n\t            monthStartIndex = 2 - dayStartIndex;\n\t            day = parseInt(value.slice(dayStartIndex, dayStartIndex + 2), 10);\n\t            month = parseInt(value.slice(monthStartIndex, monthStartIndex + 2), 10);\n\n\t            date = this.getFixedDate(day, month, 0);\n\t        }\n\n\t        // yyyy-mm-dd || yyyy-dd-mm || mm-dd-yyyy || dd-mm-yyyy || dd-yyyy-mm || mm-yyyy-dd\n\t        if (value.length === 8) {\n\t            datePattern.forEach(function (type, index) {\n\t                switch (type) {\n\t                case 'd':\n\t                    dayIndex = index;\n\t                    break;\n\t                case 'm':\n\t                    monthIndex = index;\n\t                    break;\n\t                default:\n\t                    yearIndex = index;\n\t                    break;\n\t                }\n\t            });\n\n\t            yearStartIndex = yearIndex * 2;\n\t            dayStartIndex = (dayIndex <= yearIndex) ? dayIndex * 2 : (dayIndex * 2 + 2);\n\t            monthStartIndex = (monthIndex <= yearIndex) ? monthIndex * 2 : (monthIndex * 2 + 2);\n\n\t            day = parseInt(value.slice(dayStartIndex, dayStartIndex + 2), 10);\n\t            month = parseInt(value.slice(monthStartIndex, monthStartIndex + 2), 10);\n\t            year = parseInt(value.slice(yearStartIndex, yearStartIndex + 4), 10);\n\n\t            date = this.getFixedDate(day, month, year);\n\t        }\n\n\t        owner.date = date;\n\n\t        return date.length === 0 ? value : datePattern.reduce(function (previous, current) {\n\t            switch (current) {\n\t            case 'd':\n\t                return previous + owner.addLeadingZero(date[0]);\n\t            case 'm':\n\t                return previous + owner.addLeadingZero(date[1]);\n\t            default:\n\t                return previous + '' + (date[2] || '');\n\t            }\n\t        }, '');\n\t    },\n\n\t    getFixedDate: function (day, month, year) {\n\t        day = Math.min(day, 31);\n\t        month = Math.min(month, 12);\n\t        year = parseInt((year || 0), 10);\n\n\t        if ((month < 7 && month % 2 === 0) || (month > 8 && month % 2 === 1)) {\n\t            day = Math.min(day, month === 2 ? (this.isLeapYear(year) ? 29 : 28) : 30);\n\t        }\n\n\t        return [day, month, year];\n\t    },\n\n\t    isLeapYear: function (year) {\n\t        return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\n\t    },\n\n\t    addLeadingZero: function (number) {\n\t        return (number < 10 ? '0' : '') + number;\n\t    }\n\t};\n\n\tmodule.exports = DateFormatter;\n\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\tvar PhoneFormatter = function (formatter, delimiter) {\n\t    var owner = this;\n\n\t    owner.delimiter = (delimiter || delimiter === '') ? delimiter : ' ';\n\t    owner.delimiterRE = delimiter ? new RegExp('\\\\' + delimiter, 'g') : '';\n\n\t    owner.formatter = formatter;\n\t};\n\n\tPhoneFormatter.prototype = {\n\t    setFormatter: function (formatter) {\n\t        this.formatter = formatter;\n\t    },\n\n\t    format: function (phoneNumber) {\n\t        var owner = this;\n\n\t        owner.formatter.clear();\n\n\t        // only keep number and +\n\t        phoneNumber = phoneNumber.replace(/[^\\d+]/g, '');\n\n\t        // strip delimiter\n\t        phoneNumber = phoneNumber.replace(owner.delimiterRE, '');\n\n\t        var result = '', current, validated = false;\n\n\t        for (var i = 0, iMax = phoneNumber.length; i < iMax; i++) {\n\t            current = owner.formatter.inputDigit(phoneNumber.charAt(i));\n\n\t            // has ()- or space inside\n\t            if (/[\\s()-]/g.test(current)) {\n\t                result = current;\n\n\t                validated = true;\n\t            } else {\n\t                if (!validated) {\n\t                    result = current;\n\t                }\n\t                // else: over length input\n\t                // it turns to invalid number again\n\t            }\n\t        }\n\n\t        // strip ()\n\t        // e.g. US: 7161234567 returns (716) 123-4567\n\t        result = result.replace(/[()]/g, '');\n\t        // replace library delimiter with user customized delimiter\n\t        result = result.replace(/[\\s-]/g, owner.delimiter);\n\n\t        return result;\n\t    }\n\t};\n\n\tmodule.exports = PhoneFormatter;\n\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\tvar CreditCardDetector = {\n\t    blocks: {\n\t        uatp:          [4, 5, 6],\n\t        amex:          [4, 6, 5],\n\t        diners:        [4, 6, 4],\n\t        discover:      [4, 4, 4, 4],\n\t        mastercard:    [4, 4, 4, 4],\n\t        dankort:       [4, 4, 4, 4],\n\t        instapayment:  [4, 4, 4, 4],\n\t        jcb:           [4, 4, 4, 4],\n\t        maestro:       [4, 4, 4, 4],\n\t        visa:          [4, 4, 4, 4],\n\t        mir:           [4, 4, 4, 4],\n\t        general:       [4, 4, 4, 4],\n\t        unionPay:      [4, 4, 4, 4],\n\t        generalStrict: [4, 4, 4, 7]\n\t    },\n\n\t    re: {\n\t        // starts with 1; 15 digits, not starts with 1800 (jcb card)\n\t        uatp: /^(?!1800)1\\d{0,14}/,\n\n\t        // starts with 34/37; 15 digits\n\t        amex: /^3[47]\\d{0,13}/,\n\n\t        // starts with 6011/65/644-649; 16 digits\n\t        discover: /^(?:6011|65\\d{0,2}|64[4-9]\\d?)\\d{0,12}/,\n\n\t        // starts with 300-305/309 or 36/38/39; 14 digits\n\t        diners: /^3(?:0([0-5]|9)|[689]\\d?)\\d{0,11}/,\n\n\t        // starts with 51-55/2221–2720; 16 digits\n\t        mastercard: /^(5[1-5]\\d{0,2}|22[2-9]\\d{0,1}|2[3-7]\\d{0,2})\\d{0,12}/,\n\n\t        // starts with 5019/4175/4571; 16 digits\n\t        dankort: /^(5019|4175|4571)\\d{0,12}/,\n\n\t        // starts with 637-639; 16 digits\n\t        instapayment: /^63[7-9]\\d{0,13}/,\n\n\t        // starts with 2131/1800/35; 16 digits\n\t        jcb: /^(?:2131|1800|35\\d{0,2})\\d{0,12}/,\n\n\t        // starts with 50/56-58/6304/67; 16 digits\n\t        maestro: /^(?:5[0678]\\d{0,2}|6304|67\\d{0,2})\\d{0,12}/,\n\t        \n\t        // starts with 22; 16 digits\n\t        mir: /^220[0-4]\\d{0,12}/,\n\n\t        // starts with 4; 16 digits\n\t        visa: /^4\\d{0,15}/,\n\n\t        // starts with 62; 16 digits\n\t        unionPay: /^62\\d{0,14}/\n\t    },\n\n\t    getInfo: function (value, strictMode) {\n\t        var blocks = CreditCardDetector.blocks,\n\t            re = CreditCardDetector.re;\n\n\t        // In theory, visa credit card can have up to 19 digits number.\n\t        // Set strictMode to true will remove the 16 max-length restrain,\n\t        // however, I never found any website validate card number like\n\t        // this, hence probably you don't need to enable this option.\n\t        strictMode = !!strictMode;\n\n\t        for (var key in re) {\n\t            if (re[key].test(value)) {\n\t                var block;\n\t                if (\n\t                    key === 'discover' ||\n\t                    key === 'maestro' ||\n\t                    key === 'visa' ||\n\t                    key === 'mir' ||\n\t                    key === 'unionPay'\n\t                ) {\n\t                    block = strictMode ? blocks.generalStrict : blocks[key];\n\t                } else {\n\t                    block = blocks[key];\n\t                }\n\t                return {\n\t                    type: key,\n\t                    blocks: block\n\t                };\n\t            }\n\t        }\n\n\t        return {\n\t            type:   'unknown',\n\t            blocks: strictMode ? blocks.generalStrict : blocks.general\n\t        };\n\t    }\n\t};\n\n\tmodule.exports = CreditCardDetector;\n\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\tvar Util = {\n\t    noop: function () {\n\t    },\n\n\t    strip: function (value, re) {\n\t        return value.replace(re, '');\n\t    },\n\n\t    isDelimiter: function (letter, delimiter, delimiters) {\n\t        // single delimiter\n\t        if (delimiters.length === 0) {\n\t            return letter === delimiter;\n\t        }\n\n\t        // multiple delimiters\n\t        return delimiters.some(function (current) {\n\t            if (letter === current) {\n\t                return true;\n\t            }\n\t        });\n\t    },\n\n\t    getDelimiterREByDelimiter: function (delimiter) {\n\t        return new RegExp(delimiter.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1'), 'g');\n\t    },\n\n\t    stripDelimiters: function (value, delimiter, delimiters) {\n\t        var owner = this;\n\n\t        // single delimiter\n\t        if (delimiters.length === 0) {\n\t            var delimiterRE = delimiter ? owner.getDelimiterREByDelimiter(delimiter) : '';\n\n\t            return value.replace(delimiterRE, '');\n\t        }\n\n\t        // multiple delimiters\n\t        delimiters.forEach(function (current) {\n\t            value = value.replace(owner.getDelimiterREByDelimiter(current), '');\n\t        });\n\n\t        return value;\n\t    },\n\n\t    headStr: function (str, length) {\n\t        return str.slice(0, length);\n\t    },\n\n\t    getMaxLength: function (blocks) {\n\t        return blocks.reduce(function (previous, current) {\n\t            return previous + current;\n\t        }, 0);\n\t    },\n\n\t    // strip value by prefix length\n\t    // for prefix: PRE\n\t    // (PRE123, 3) -> 123\n\t    // (PR123, 3) -> 23 this happens when user hits backspace in front of \"PRE\"\n\t    getPrefixStrippedValue: function (value, prefix, prefixLength) {\n\t        if (value.slice(0, prefixLength) !== prefix) {\n\t            var diffIndex = this.getFirstDiffIndex(prefix, value.slice(0, prefixLength));\n\n\t            value = prefix + value.slice(diffIndex, diffIndex + 1) + value.slice(prefixLength + 1);\n\t        }\n\n\t        return value.slice(prefixLength);\n\t    },\n\n\t    getFirstDiffIndex: function (prev, current) {\n\t        var index = 0;\n\n\t        while (prev.charAt(index) === current.charAt(index)) {\n\t            if (prev.charAt(index++) === '') {\n\t                return -1;\n\t            }\n\t        }\n\n\t        return index;\n\t    },\n\n\t    getFormattedValue: function (value, blocks, blocksLength, delimiter, delimiters, delimiterLazyShow) {\n\t        var result = '',\n\t            multipleDelimiters = delimiters.length > 0,\n\t            currentDelimiter;\n\n\t        // no options, normal input\n\t        if (blocksLength === 0) {\n\t            return value;\n\t        }\n\n\t        blocks.forEach(function (length, index) {\n\t            if (value.length > 0) {\n\t                var sub = value.slice(0, length),\n\t                    rest = value.slice(length);\n\n\t                if (multipleDelimiters) {\n\t                    currentDelimiter = delimiters[delimiterLazyShow ? (index - 1) : index] || currentDelimiter;\n\t                } else {\n\t                    currentDelimiter = delimiter;\n\t                }\n\n\t                if (delimiterLazyShow) {\n\t                    if (index > 0) {\n\t                        result += currentDelimiter;\n\t                    }\n\n\t                    result += sub;\n\t                } else {\n\t                    result += sub;\n\n\t                    if (sub.length === length && index < blocksLength - 1) {\n\t                        result += currentDelimiter;\n\t                    }\n\t                }\n\n\t                // update remaining string\n\t                value = rest;\n\t            }\n\t        });\n\n\t        return result;\n\t    },\n\n\t    isAndroid: function () {\n\t        return navigator && /android/i.test(navigator.userAgent);\n\t    },\n\n\t    // On Android chrome, the keyup and keydown events\n\t    // always return key code 229 as a composition that\n\t    // buffers the user’s keystrokes\n\t    // see https://github.com/nosir/cleave.js/issues/147\n\t    isAndroidBackspaceKeydown: function (lastInputValue, currentInputValue) {\n\t        if (!this.isAndroid() || !lastInputValue || !currentInputValue) {\n\t            return false;\n\t        }\n\n\t        return currentInputValue === lastInputValue.slice(0, -1);\n\t    }\n\t};\n\n\tmodule.exports = Util;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\n\t/**\n\t * Props Assignment\n\t *\n\t * Separate this, so react module can share the usage\n\t */\n\tvar DefaultProperties = {\n\t    // Maybe change to object-assign\n\t    // for now just keep it as simple\n\t    assign: function (target, opts) {\n\t        target = target || {};\n\t        opts = opts || {};\n\n\t        // credit card\n\t        target.creditCard = !!opts.creditCard;\n\t        target.creditCardStrictMode = !!opts.creditCardStrictMode;\n\t        target.creditCardType = '';\n\t        target.onCreditCardTypeChanged = opts.onCreditCardTypeChanged || (function () {});\n\n\t        // phone\n\t        target.phone = !!opts.phone;\n\t        target.phoneRegionCode = opts.phoneRegionCode || 'AU';\n\t        target.phoneFormatter = {};\n\n\t        // date\n\t        target.date = !!opts.date;\n\t        target.datePattern = opts.datePattern || ['d', 'm', 'Y'];\n\t        target.dateFormatter = {};\n\n\t        // numeral\n\t        target.numeral = !!opts.numeral;\n\t        target.numeralIntegerScale = opts.numeralIntegerScale > 0 ? opts.numeralIntegerScale : 0;\n\t        target.numeralDecimalScale = opts.numeralDecimalScale >= 0 ? opts.numeralDecimalScale : 2;\n\t        target.numeralDecimalMark = opts.numeralDecimalMark || '.';\n\t        target.numeralThousandsGroupStyle = opts.numeralThousandsGroupStyle || 'thousand';\n\t        target.numeralPositiveOnly = !!opts.numeralPositiveOnly;\n\t        target.stripLeadingZeroes = opts.stripLeadingZeroes !== false;\n\n\t        // others\n\t        target.numericOnly = target.creditCard || target.date || !!opts.numericOnly;\n\n\t        target.uppercase = !!opts.uppercase;\n\t        target.lowercase = !!opts.lowercase;\n\n\t        target.prefix = (target.creditCard || target.date) ? '' : (opts.prefix || '');\n\t        target.noImmediatePrefix = !!opts.noImmediatePrefix;\n\t        target.prefixLength = target.prefix.length;\n\t        target.rawValueTrimPrefix = !!opts.rawValueTrimPrefix;\n\t        target.copyDelimiter = !!opts.copyDelimiter;\n\n\t        target.initValue = (opts.initValue !== undefined && opts.initValue !== null) ? opts.initValue.toString() : '';\n\n\t        target.delimiter =\n\t            (opts.delimiter || opts.delimiter === '') ? opts.delimiter :\n\t                (opts.date ? '/' :\n\t                    (opts.numeral ? ',' :\n\t                        (opts.phone ? ' ' :\n\t                            ' ')));\n\t        target.delimiterLength = target.delimiter.length;\n\t        target.delimiterLazyShow = !!opts.delimiterLazyShow;\n\t        target.delimiters = opts.delimiters || [];\n\n\t        target.blocks = opts.blocks || [];\n\t        target.blocksLength = target.blocks.length;\n\n\t        target.root = (typeof global === 'object' && global) ? global : window;\n\n\t        target.maxLength = 0;\n\n\t        target.backspace = false;\n\t        target.result = '';\n\n\t        return target;\n\t    }\n\t};\n\n\tmodule.exports = DefaultProperties;\n\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ })\n/******/ ])\n});\n;\n\n/***/ }),\n\n/***/ 827:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('b-field', [_c('b-input', {\n    directives: [{\n      name: \"cleave\",\n      rawName: \"v-cleave\",\n      value: (_vm.masks.creditCard),\n      expression: \"masks.creditCard\"\n    }],\n    attrs: {\n      \"placeholder\": \"Credit Card\"\n    }\n  })], 1), _vm._v(\" \"), _c('b-field', [_c('b-input', {\n    directives: [{\n      name: \"cleave\",\n      rawName: \"v-cleave\",\n      value: (_vm.masks.numeral),\n      expression: \"masks.numeral\"\n    }],\n    attrs: {\n      \"placeholder\": \"Numeral\"\n    }\n  })], 1), _vm._v(\" \"), _c('b-field', {\n    attrs: {\n      \"addons\": false\n    }\n  }, [_c('b-input', {\n    directives: [{\n      name: \"cleave\",\n      rawName: \"v-cleave\",\n      value: (_vm.masks.custom),\n      expression: \"masks.custom\"\n    }],\n    attrs: {\n      \"placeholder\": \"Custom\"\n    },\n    nativeOn: {\n      \"input\": function($event) {\n        _vm.getRawValue($event)\n      }\n    },\n    model: {\n      value: (_vm.value),\n      callback: function($$v) {\n        _vm.value = $$v\n      },\n      expression: \"value\"\n    }\n  }), _vm._v(\" \"), _c('p', [_c('b', [_vm._v(\"Formatted value (v-model)\")]), _vm._v(\": \" + _vm._s(_vm.value))]), _vm._v(\" \"), _c('p', [_c('b', [_vm._v(\"Raw value\")]), _vm._v(\": \" + _vm._s(_vm.rawValue))])], 1)], 1)\n},staticRenderFns: []}\n\n/***/ }),\n\n/***/ 904:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__examples_ExFormat__ = __webpack_require__(227);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__examples_ExFormat___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__examples_ExFormat__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__raw_loader_examples_ExFormat__ = __webpack_require__(1023);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__raw_loader_examples_ExFormat___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__raw_loader_examples_ExFormat__);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    data: function data() {\n        return {\n            ExFormat: __WEBPACK_IMPORTED_MODULE_0__examples_ExFormat___default.a,\n            ExFormatCode: __WEBPACK_IMPORTED_MODULE_1__raw_loader_examples_ExFormat___default.a\n        };\n    }\n});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/27.efbb8a610760cf02f25d.js","module.exports = \"<template>\\n    <section>\\n        <b-field>\\n            <b-input\\n                placeholder=\\\"Credit Card\\\"\\n                v-cleave=\\\"masks.creditCard\\\">\\n            </b-input>\\n        </b-field>\\n\\n        <b-field>\\n            <b-input\\n                placeholder=\\\"Numeral\\\"\\n                v-cleave=\\\"masks.numeral\\\">\\n            </b-input>\\n        </b-field>\\n\\n        <b-field :addons=\\\"false\\\">\\n            <b-input\\n                placeholder=\\\"Custom\\\"\\n                v-model=\\\"value\\\"\\n                v-cleave=\\\"masks.custom\\\"\\n                @input.native=\\\"getRawValue\\\">\\n            </b-input>\\n            <p><b>Formatted value (v-model)</b>: {{ value }}</p>\\n            <p><b>Raw value</b>: {{ rawValue }}</p>\\n        </b-field>\\n    </section>\\n</template>\\n\\n<script>\\n    // You have to install cleave.js to use it:\\n    // 'npm install cleave.js'\\n    import Cleave from 'cleave.js'\\n\\n    /**\\n     * We add a new instance of Cleave when the element\\n     * is bound or updated, and destroy it when it's unbound.\\n     */\\n    const cleave = {\\n        name: 'cleave',\\n        bind(el, binding) {\\n            const input = el.querySelector('input')\\n            input._vCleave = new Cleave(input, binding.value)\\n        },\\n        update(el, binding) {\\n            const input = el.querySelector('input')\\n            input._vCleave.destroy()\\n            input._vCleave = new Cleave(input, binding.value)\\n        },\\n        unbind(el) {\\n            const input = el.querySelector('input')\\n            input._vCleave.destroy()\\n        }\\n    }\\n\\n    export default {\\n        directives: { cleave },\\n        data() {\\n            return {\\n                value: '',\\n                rawValue: '',\\n                masks: {\\n                    creditCard: { creditCard: true },\\n                    numeral: {\\n                        numeral: true,\\n                        numeralThousandsGroupStyle: 'thousand',\\n                        prefix: '$ '\\n                    },\\n                    custom: {\\n                        delimiters: ['.', '.', '-'],\\n                        blocks: [3, 3, 3, 2],\\n                        numericOnly: true\\n                    }\\n                }\\n            }\\n        },\\n        methods: {\\n            getRawValue(event) {\\n                this.rawValue = event.target._vCleave.getRawValue()\\n            }\\n        }\\n    }\\n</script>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./docs/pages/extensions/cleavejs/examples/ExFormat.vue\n// module id = 1023\n// module chunks = 27","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"default-container\"\n  }, [_c('h1', {\n    staticClass: \"title is-spaced\"\n  }, [_vm._v(\"Cleave.js \")]), _vm._v(\" \"), _c('h2', {\n    staticClass: \"subtitle\"\n  }, [_vm._v(\"Format input text while you type — as a Vue directive\")]), _vm._v(\" \"), _vm._m(0), _vm._v(\" \"), _c('Example', {\n    attrs: {\n      \"component\": _vm.ExFormat,\n      \"code\": _vm.ExFormatCode,\n      \"vertical\": \"\"\n    }\n  }, [_c('b-message', {\n    attrs: {\n      \"type\": \"is-info\"\n    }\n  }, [_c('p', [_c('strong', [_vm._v(\"Cleave.js is not included in Buefy\")]), _vm._v(\", you have to install it:\")]), _vm._v(\" \"), _c('CodeView', {\n    attrs: {\n      \"code\": \"npm install cleave.js\",\n      \"expanded\": \"\"\n    }\n  })], 1)], 1)], 1)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"buttons\"\n  }, [_c('a', {\n    staticClass: \"button\",\n    attrs: {\n      \"href\": \"https://nosir.github.io/cleave.js\",\n      \"target\": \"_blank\"\n    }\n  }, [_vm._v(\"\\n            Website\\n        \")]), _vm._v(\" \"), _c('a', {\n    staticClass: \"button\",\n    attrs: {\n      \"href\": \"https://github.com/nosir/cleave.js/blob/master/doc/options.md\",\n      \"target\": \"_blank\"\n    }\n  }, [_vm._v(\"\\n            Docs\\n        \")])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-bb86b9ea\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./docs/pages/extensions/cleavejs/Cleavejs.vue\n// module id = 1056\n// module chunks = 27","var Component = require(\"!../../../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ExFormat.vue\"),\n  /* template */\n  require(\"!!../../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-62f8b29c\\\",\\\"hasScoped\\\":false}!../../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./ExFormat.vue\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/pages/extensions/cleavejs/examples/ExFormat.vue\n// module id = 227\n// module chunks = 27 34","var Component = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Cleavejs.vue\"),\n  /* template */\n  require(\"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-bb86b9ea\\\",\\\"hasScoped\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Cleavejs.vue\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/pages/extensions/cleavejs/Cleavejs.vue\n// module id = 258\n// module chunks = 27","<template>\n    <section>\n        <b-field>\n            <b-input\n                placeholder=\"Credit Card\"\n                v-cleave=\"masks.creditCard\">\n            </b-input>\n        </b-field>\n\n        <b-field>\n            <b-input\n                placeholder=\"Numeral\"\n                v-cleave=\"masks.numeral\">\n            </b-input>\n        </b-field>\n\n        <b-field :addons=\"false\">\n            <b-input\n                placeholder=\"Custom\"\n                v-model=\"value\"\n                v-cleave=\"masks.custom\"\n                @input.native=\"getRawValue\">\n            </b-input>\n            <p><b>Formatted value (v-model)</b>: {{ value }}</p>\n            <p><b>Raw value</b>: {{ rawValue }}</p>\n        </b-field>\n    </section>\n</template>\n\n<script>\n    // You have to install cleave.js to use it:\n    // 'npm install cleave.js'\n    import Cleave from 'cleave.js'\n\n    /**\n     * We add a new instance of Cleave when the element\n     * is bound or updated, and destroy it when it's unbound.\n     */\n    const cleave = {\n        name: 'cleave',\n        bind(el, binding) {\n            const input = el.querySelector('input')\n            input._vCleave = new Cleave(input, binding.value)\n        },\n        update(el, binding) {\n            const input = el.querySelector('input')\n            input._vCleave.destroy()\n            input._vCleave = new Cleave(input, binding.value)\n        },\n        unbind(el) {\n            const input = el.querySelector('input')\n            input._vCleave.destroy()\n        }\n    }\n\n    export default {\n        directives: { cleave },\n        data() {\n            return {\n                value: '',\n                rawValue: '',\n                masks: {\n                    creditCard: { creditCard: true },\n                    numeral: {\n                        numeral: true,\n                        numeralThousandsGroupStyle: 'thousand',\n                        prefix: '$ '\n                    },\n                    custom: {\n                        delimiters: ['.', '.', '-'],\n                        blocks: [3, 3, 3, 2],\n                        numericOnly: true\n                    }\n                }\n            }\n        },\n        methods: {\n            getRawValue(event) {\n                this.rawValue = event.target._vCleave.getRawValue()\n            }\n        }\n    }\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ExFormat.vue?f71eb308","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Cleave\"] = factory();\n\telse\n\t\troot[\"Cleave\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\n\t/**\n\t * Construct a new Cleave instance by passing the configuration object\n\t *\n\t * @param {String | HTMLElement} element\n\t * @param {Object} opts\n\t */\n\tvar Cleave = function (element, opts) {\n\t    var owner = this;\n\n\t    if (typeof element === 'string') {\n\t        owner.element = document.querySelector(element);\n\t    } else {\n\t        owner.element = ((typeof element.length !== 'undefined') && element.length > 0) ? element[0] : element;\n\t    }\n\n\t    if (!owner.element) {\n\t        throw new Error('[cleave.js] Please check the element');\n\t    }\n\n\t    opts.initValue = owner.element.value;\n\n\t    owner.properties = Cleave.DefaultProperties.assign({}, opts);\n\n\t    owner.init();\n\t};\n\n\tCleave.prototype = {\n\t    init: function () {\n\t        var owner = this, pps = owner.properties;\n\n\t        // no need to use this lib\n\t        if (!pps.numeral && !pps.phone && !pps.creditCard && !pps.date && (pps.blocksLength === 0 && !pps.prefix)) {\n\t            owner.onInput(pps.initValue);\n\n\t            return;\n\t        }\n\n\t        pps.maxLength = Cleave.Util.getMaxLength(pps.blocks);\n\n\t        owner.isAndroid = Cleave.Util.isAndroid();\n\t        owner.lastInputValue = '';\n\n\t        owner.onChangeListener = owner.onChange.bind(owner);\n\t        owner.onKeyDownListener = owner.onKeyDown.bind(owner);\n\t        owner.onCutListener = owner.onCut.bind(owner);\n\t        owner.onCopyListener = owner.onCopy.bind(owner);\n\n\t        owner.element.addEventListener('input', owner.onChangeListener);\n\t        owner.element.addEventListener('keydown', owner.onKeyDownListener);\n\t        owner.element.addEventListener('cut', owner.onCutListener);\n\t        owner.element.addEventListener('copy', owner.onCopyListener);\n\n\n\t        owner.initPhoneFormatter();\n\t        owner.initDateFormatter();\n\t        owner.initNumeralFormatter();\n\n\t        // avoid touch input field if value is null\n\t        // otherwise Firefox will add red box-shadow for <input required />\n\t        if (pps.initValue || (pps.prefix && !pps.noImmediatePrefix)) {\n\t            owner.onInput(pps.initValue);\n\t        }\n\t    },\n\n\t    initNumeralFormatter: function () {\n\t        var owner = this, pps = owner.properties;\n\n\t        if (!pps.numeral) {\n\t            return;\n\t        }\n\n\t        pps.numeralFormatter = new Cleave.NumeralFormatter(\n\t            pps.numeralDecimalMark,\n\t            pps.numeralIntegerScale,\n\t            pps.numeralDecimalScale,\n\t            pps.numeralThousandsGroupStyle,\n\t            pps.numeralPositiveOnly,\n\t            pps.stripLeadingZeroes,\n\t            pps.delimiter\n\t        );\n\t    },\n\n\t    initDateFormatter: function () {\n\t        var owner = this, pps = owner.properties;\n\n\t        if (!pps.date) {\n\t            return;\n\t        }\n\n\t        pps.dateFormatter = new Cleave.DateFormatter(pps.datePattern);\n\t        pps.blocks = pps.dateFormatter.getBlocks();\n\t        pps.blocksLength = pps.blocks.length;\n\t        pps.maxLength = Cleave.Util.getMaxLength(pps.blocks);\n\t    },\n\n\t    initPhoneFormatter: function () {\n\t        var owner = this, pps = owner.properties;\n\n\t        if (!pps.phone) {\n\t            return;\n\t        }\n\n\t        // Cleave.AsYouTypeFormatter should be provided by\n\t        // external google closure lib\n\t        try {\n\t            pps.phoneFormatter = new Cleave.PhoneFormatter(\n\t                new pps.root.Cleave.AsYouTypeFormatter(pps.phoneRegionCode),\n\t                pps.delimiter\n\t            );\n\t        } catch (ex) {\n\t            throw new Error('[cleave.js] Please include phone-type-formatter.{country}.js lib');\n\t        }\n\t    },\n\n\t    onKeyDown: function (event) {\n\t        var owner = this, pps = owner.properties,\n\t            charCode = event.which || event.keyCode,\n\t            Util = Cleave.Util,\n\t            currentValue = owner.element.value;\n\n\t        if (Util.isAndroidBackspaceKeydown(owner.lastInputValue, currentValue)) {\n\t            charCode = 8;\n\t        }\n\n\t        owner.lastInputValue = currentValue;\n\n\t        // hit backspace when last character is delimiter\n\t        if (charCode === 8 && Util.isDelimiter(currentValue.slice(-pps.delimiterLength), pps.delimiter, pps.delimiters)) {\n\t            pps.backspace = true;\n\n\t            return;\n\t        }\n\n\t        pps.backspace = false;\n\t    },\n\n\t    onChange: function () {\n\t        this.onInput(this.element.value);\n\t    },\n\n\t    onCut: function (e) {\n\t        this.copyClipboardData(e);\n\t        this.onInput('');\n\t    },\n\n\t    onCopy: function (e) {\n\t        this.copyClipboardData(e);\n\t    },\n\n\t    copyClipboardData: function (e) {\n\t        var owner = this,\n\t            pps = owner.properties,\n\t            Util = Cleave.Util,\n\t            inputValue = owner.element.value,\n\t            textToCopy = '';\n\n\t        if (!pps.copyDelimiter) {\n\t            textToCopy = Util.stripDelimiters(inputValue, pps.delimiter, pps.delimiters);\n\t        } else {\n\t            textToCopy = inputValue;\n\t        }\n\n\t        try {\n\t            if (e.clipboardData) {\n\t                e.clipboardData.setData('Text', textToCopy);\n\t            } else {\n\t                window.clipboardData.setData('Text', textToCopy);\n\t            }\n\n\t            e.preventDefault();\n\t        } catch (ex) {\n\t            //  empty\n\t        }\n\t    },\n\n\t    onInput: function (value) {\n\t        var owner = this, pps = owner.properties,\n\t            Util = Cleave.Util;\n\n\t        // case 1: delete one more character \"4\"\n\t        // 1234*| -> hit backspace -> 123|\n\t        // case 2: last character is not delimiter which is:\n\t        // 12|34* -> hit backspace -> 1|34*\n\t        // note: no need to apply this for numeral mode\n\t        if (!pps.numeral && pps.backspace && !Util.isDelimiter(value.slice(-pps.delimiterLength), pps.delimiter, pps.delimiters)) {\n\t            value = Util.headStr(value, value.length - pps.delimiterLength);\n\t        }\n\n\t        // phone formatter\n\t        if (pps.phone) {\n\t            if (pps.prefix && (!pps.noImmediatePrefix || value.length)) {\n\t                pps.result = pps.prefix + pps.phoneFormatter.format(value).slice(pps.prefix.length);\n\t            } else {\n\t                pps.result = pps.phoneFormatter.format(value);\n\t            }\n\t            owner.updateValueState();\n\n\t            return;\n\t        }\n\n\t        // numeral formatter\n\t        if (pps.numeral) {\n\t            if (pps.prefix && (!pps.noImmediatePrefix || value.length)) {\n\t                pps.result = pps.prefix + pps.numeralFormatter.format(value);\n\t            } else {\n\t                pps.result = pps.numeralFormatter.format(value);\n\t            }\n\t            owner.updateValueState();\n\n\t            return;\n\t        }\n\n\t        // date\n\t        if (pps.date) {\n\t            value = pps.dateFormatter.getValidatedDate(value);\n\t        }\n\n\t        // strip delimiters\n\t        value = Util.stripDelimiters(value, pps.delimiter, pps.delimiters);\n\n\t        // strip prefix\n\t        value = Util.getPrefixStrippedValue(value, pps.prefix, pps.prefixLength);\n\n\t        // strip non-numeric characters\n\t        value = pps.numericOnly ? Util.strip(value, /[^\\d]/g) : value;\n\n\t        // convert case\n\t        value = pps.uppercase ? value.toUpperCase() : value;\n\t        value = pps.lowercase ? value.toLowerCase() : value;\n\n\t        // prefix\n\t        if (pps.prefix && (!pps.noImmediatePrefix || value.length)) {\n\t            value = pps.prefix + value;\n\n\t            // no blocks specified, no need to do formatting\n\t            if (pps.blocksLength === 0) {\n\t                pps.result = value;\n\t                owner.updateValueState();\n\n\t                return;\n\t            }\n\t        }\n\n\t        // update credit card props\n\t        if (pps.creditCard) {\n\t            owner.updateCreditCardPropsByValue(value);\n\t        }\n\n\t        // strip over length characters\n\t        value = Util.headStr(value, pps.maxLength);\n\n\t        // apply blocks\n\t        pps.result = Util.getFormattedValue(\n\t            value,\n\t            pps.blocks, pps.blocksLength,\n\t            pps.delimiter, pps.delimiters, pps.delimiterLazyShow\n\t        );\n\n\t        owner.updateValueState();\n\t    },\n\n\t    updateCreditCardPropsByValue: function (value) {\n\t        var owner = this, pps = owner.properties,\n\t            Util = Cleave.Util,\n\t            creditCardInfo;\n\n\t        // At least one of the first 4 characters has changed\n\t        if (Util.headStr(pps.result, 4) === Util.headStr(value, 4)) {\n\t            return;\n\t        }\n\n\t        creditCardInfo = Cleave.CreditCardDetector.getInfo(value, pps.creditCardStrictMode);\n\n\t        pps.blocks = creditCardInfo.blocks;\n\t        pps.blocksLength = pps.blocks.length;\n\t        pps.maxLength = Util.getMaxLength(pps.blocks);\n\n\t        // credit card type changed\n\t        if (pps.creditCardType !== creditCardInfo.type) {\n\t            pps.creditCardType = creditCardInfo.type;\n\n\t            pps.onCreditCardTypeChanged.call(owner, pps.creditCardType);\n\t        }\n\t    },\n\n\t    setCurrentSelection: function (endPos, oldValue) {\n\t        var elem = this.element;\n\n\t        // If cursor was at the end of value, just place it back.\n\t        // Because new value could contain additional chars.\n\t        if (oldValue.length !== endPos && elem === document.activeElement) {\n\t          if ( elem.createTextRange ) {\n\t            var range = elem.createTextRange();\n\n\t            range.move('character', endPos);\n\t            range.select();\n\t          } else {\n\t            elem.setSelectionRange(endPos, endPos);\n\t          }\n\t        }\n\t    },\n\n\t    updateValueState: function () {\n\t        var owner = this;\n\n\t        if (!owner.element) {\n\t            return;\n\t        }\n\n\t        var endPos = owner.element.selectionEnd;\n\t        var oldValue = owner.element.value;\n\n\t        // fix Android browser type=\"text\" input field\n\t        // cursor not jumping issue\n\t        if (owner.isAndroid) {\n\t            window.setTimeout(function () {\n\t                owner.element.value = owner.properties.result;\n\t                owner.setCurrentSelection(endPos, oldValue);\n\t            }, 1);\n\n\t            return;\n\t        }\n\n\t        owner.element.value = owner.properties.result;\n\t        owner.setCurrentSelection(endPos, oldValue);\n\t    },\n\n\t    setPhoneRegionCode: function (phoneRegionCode) {\n\t        var owner = this, pps = owner.properties;\n\n\t        pps.phoneRegionCode = phoneRegionCode;\n\t        owner.initPhoneFormatter();\n\t        owner.onChange();\n\t    },\n\n\t    setRawValue: function (value) {\n\t        var owner = this, pps = owner.properties;\n\n\t        value = value !== undefined && value !== null ? value.toString() : '';\n\n\t        if (pps.numeral) {\n\t            value = value.replace('.', pps.numeralDecimalMark);\n\t        }\n\n\t        pps.backspace = false;\n\t        \n\t        owner.element.value = value;\n\t        owner.onInput(value);\n\t    },\n\n\t    getRawValue: function () {\n\t        var owner = this,\n\t            pps = owner.properties,\n\t            Util = Cleave.Util,\n\t            rawValue = owner.element.value;\n\n\t        if (pps.rawValueTrimPrefix) {\n\t            rawValue = Util.getPrefixStrippedValue(rawValue, pps.prefix, pps.prefixLength);\n\t        }\n\n\t        if (pps.numeral) {\n\t            rawValue = pps.numeralFormatter.getRawValue(rawValue);\n\t        } else {\n\t            rawValue = Util.stripDelimiters(rawValue, pps.delimiter, pps.delimiters);\n\t        }\n\n\t        return rawValue;\n\t    },\n\n\t    getISOFormatDate: function () {\n\t        var owner = this,\n\t            pps = owner.properties;\n\n\t        return pps.date ? pps.dateFormatter.getISOFormatDate() : '';\n\t    },\n\n\t    getFormattedValue: function () {\n\t        return this.element.value;\n\t    },\n\n\t    destroy: function () {\n\t        var owner = this;\n\n\t        owner.element.removeEventListener('input', owner.onChangeListener);\n\t        owner.element.removeEventListener('keydown', owner.onKeyDownListener);\n\t        owner.element.removeEventListener('cut', owner.onCutListener);\n\t        owner.element.removeEventListener('copy', owner.onCopyListener);\n\t    },\n\n\t    toString: function () {\n\t        return '[Cleave Object]';\n\t    }\n\t};\n\n\tCleave.NumeralFormatter = __webpack_require__(1);\n\tCleave.DateFormatter = __webpack_require__(2);\n\tCleave.PhoneFormatter = __webpack_require__(3);\n\tCleave.CreditCardDetector = __webpack_require__(4);\n\tCleave.Util = __webpack_require__(5);\n\tCleave.DefaultProperties = __webpack_require__(6);\n\n\t// for angular directive\n\t((typeof global === 'object' && global) ? global : window)['Cleave'] = Cleave;\n\n\t// CommonJS\n\tmodule.exports = Cleave;\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\tvar NumeralFormatter = function (numeralDecimalMark,\n\t                                 numeralIntegerScale,\n\t                                 numeralDecimalScale,\n\t                                 numeralThousandsGroupStyle,\n\t                                 numeralPositiveOnly,\n\t                                 stripLeadingZeroes,\n\t                                 delimiter) {\n\t    var owner = this;\n\n\t    owner.numeralDecimalMark = numeralDecimalMark || '.';\n\t    owner.numeralIntegerScale = numeralIntegerScale > 0 ? numeralIntegerScale : 0;\n\t    owner.numeralDecimalScale = numeralDecimalScale >= 0 ? numeralDecimalScale : 2;\n\t    owner.numeralThousandsGroupStyle = numeralThousandsGroupStyle || NumeralFormatter.groupStyle.thousand;\n\t    owner.numeralPositiveOnly = !!numeralPositiveOnly;\n\t    owner.stripLeadingZeroes = stripLeadingZeroes !== false;\n\t    owner.delimiter = (delimiter || delimiter === '') ? delimiter : ',';\n\t    owner.delimiterRE = delimiter ? new RegExp('\\\\' + delimiter, 'g') : '';\n\t};\n\n\tNumeralFormatter.groupStyle = {\n\t    thousand: 'thousand',\n\t    lakh:     'lakh',\n\t    wan:      'wan',\n\t    none:     'none'    \n\t};\n\n\tNumeralFormatter.prototype = {\n\t    getRawValue: function (value) {\n\t        return value.replace(this.delimiterRE, '').replace(this.numeralDecimalMark, '.');\n\t    },\n\n\t    format: function (value) {\n\t        var owner = this, parts, partInteger, partDecimal = '';\n\n\t        // strip alphabet letters\n\t        value = value.replace(/[A-Za-z]/g, '')\n\t            // replace the first decimal mark with reserved placeholder\n\t            .replace(owner.numeralDecimalMark, 'M')\n\n\t            // strip non numeric letters except minus and \"M\"\n\t            // this is to ensure prefix has been stripped\n\t            .replace(/[^\\dM-]/g, '')\n\n\t            // replace the leading minus with reserved placeholder\n\t            .replace(/^\\-/, 'N')\n\n\t            // strip the other minus sign (if present)\n\t            .replace(/\\-/g, '')\n\n\t            // replace the minus sign (if present)\n\t            .replace('N', owner.numeralPositiveOnly ? '' : '-')\n\n\t            // replace decimal mark\n\t            .replace('M', owner.numeralDecimalMark);\n\n\t        // strip any leading zeros\n\t        if (owner.stripLeadingZeroes) {\n\t            value = value.replace(/^(-)?0+(?=\\d)/, '$1');\n\t        }\n\n\t        partInteger = value;\n\n\t        if (value.indexOf(owner.numeralDecimalMark) >= 0) {\n\t            parts = value.split(owner.numeralDecimalMark);\n\t            partInteger = parts[0];\n\t            partDecimal = owner.numeralDecimalMark + parts[1].slice(0, owner.numeralDecimalScale);\n\t        }\n\n\t        if (owner.numeralIntegerScale > 0) {\n\t          partInteger = partInteger.slice(0, owner.numeralIntegerScale + (value.slice(0, 1) === '-' ? 1 : 0));\n\t        }\n\n\t        switch (owner.numeralThousandsGroupStyle) {\n\t        case NumeralFormatter.groupStyle.lakh:\n\t            partInteger = partInteger.replace(/(\\d)(?=(\\d\\d)+\\d$)/g, '$1' + owner.delimiter);\n\n\t            break;\n\n\t        case NumeralFormatter.groupStyle.wan:\n\t            partInteger = partInteger.replace(/(\\d)(?=(\\d{4})+$)/g, '$1' + owner.delimiter);\n\n\t            break;\n\n\t        case NumeralFormatter.groupStyle.thousand:\n\t            partInteger = partInteger.replace(/(\\d)(?=(\\d{3})+$)/g, '$1' + owner.delimiter);\n\n\t            break;\n\t        }\n\n\t        return partInteger.toString() + (owner.numeralDecimalScale > 0 ? partDecimal.toString() : '');\n\t    }\n\t};\n\n\tmodule.exports = NumeralFormatter;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\tvar DateFormatter = function (datePattern) {\n\t    var owner = this;\n\n\t    owner.date = [];\n\t    owner.blocks = [];\n\t    owner.datePattern = datePattern;\n\t    owner.initBlocks();\n\t};\n\n\tDateFormatter.prototype = {\n\t    initBlocks: function () {\n\t        var owner = this;\n\t        owner.datePattern.forEach(function (value) {\n\t            if (value === 'Y') {\n\t                owner.blocks.push(4);\n\t            } else {\n\t                owner.blocks.push(2);\n\t            }\n\t        });\n\t    },\n\n\t    getISOFormatDate: function () {\n\t        var owner = this,\n\t            date = owner.date;\n\n\t        return date[2] ? (\n\t            date[2] + '-' + owner.addLeadingZero(date[1]) + '-' + owner.addLeadingZero(date[0])\n\t        ) : '';\n\t    },\n\n\t    getBlocks: function () {\n\t        return this.blocks;\n\t    },\n\n\t    getValidatedDate: function (value) {\n\t        var owner = this, result = '';\n\n\t        value = value.replace(/[^\\d]/g, '');\n\n\t        owner.blocks.forEach(function (length, index) {\n\t            if (value.length > 0) {\n\t                var sub = value.slice(0, length),\n\t                    sub0 = sub.slice(0, 1),\n\t                    rest = value.slice(length);\n\n\t                switch (owner.datePattern[index]) {\n\t                case 'd':\n\t                    if (sub === '00') {\n\t                        sub = '01';\n\t                    } else if (parseInt(sub0, 10) > 3) {\n\t                        sub = '0' + sub0;\n\t                    } else if (parseInt(sub, 10) > 31) {\n\t                        sub = '31';\n\t                    }\n\n\t                    break;\n\n\t                case 'm':\n\t                    if (sub === '00') {\n\t                        sub = '01';\n\t                    } else if (parseInt(sub0, 10) > 1) {\n\t                        sub = '0' + sub0;\n\t                    } else if (parseInt(sub, 10) > 12) {\n\t                        sub = '12';\n\t                    }\n\n\t                    break;\n\t                }\n\n\t                result += sub;\n\n\t                // update remaining string\n\t                value = rest;\n\t            }\n\t        });\n\n\t        return this.getFixedDateString(result);\n\t    },\n\n\t    getFixedDateString: function (value) {\n\t        var owner = this, datePattern = owner.datePattern, date = [],\n\t            dayIndex = 0, monthIndex = 0, yearIndex = 0,\n\t            dayStartIndex = 0, monthStartIndex = 0, yearStartIndex = 0,\n\t            day, month, year;\n\n\t        // mm-dd || dd-mm\n\t        if (value.length === 4 && datePattern[0].toLowerCase() !== 'y' && datePattern[1].toLowerCase() !== 'y') {\n\t            dayStartIndex = datePattern[0] === 'd' ? 0 : 2;\n\t            monthStartIndex = 2 - dayStartIndex;\n\t            day = parseInt(value.slice(dayStartIndex, dayStartIndex + 2), 10);\n\t            month = parseInt(value.slice(monthStartIndex, monthStartIndex + 2), 10);\n\n\t            date = this.getFixedDate(day, month, 0);\n\t        }\n\n\t        // yyyy-mm-dd || yyyy-dd-mm || mm-dd-yyyy || dd-mm-yyyy || dd-yyyy-mm || mm-yyyy-dd\n\t        if (value.length === 8) {\n\t            datePattern.forEach(function (type, index) {\n\t                switch (type) {\n\t                case 'd':\n\t                    dayIndex = index;\n\t                    break;\n\t                case 'm':\n\t                    monthIndex = index;\n\t                    break;\n\t                default:\n\t                    yearIndex = index;\n\t                    break;\n\t                }\n\t            });\n\n\t            yearStartIndex = yearIndex * 2;\n\t            dayStartIndex = (dayIndex <= yearIndex) ? dayIndex * 2 : (dayIndex * 2 + 2);\n\t            monthStartIndex = (monthIndex <= yearIndex) ? monthIndex * 2 : (monthIndex * 2 + 2);\n\n\t            day = parseInt(value.slice(dayStartIndex, dayStartIndex + 2), 10);\n\t            month = parseInt(value.slice(monthStartIndex, monthStartIndex + 2), 10);\n\t            year = parseInt(value.slice(yearStartIndex, yearStartIndex + 4), 10);\n\n\t            date = this.getFixedDate(day, month, year);\n\t        }\n\n\t        owner.date = date;\n\n\t        return date.length === 0 ? value : datePattern.reduce(function (previous, current) {\n\t            switch (current) {\n\t            case 'd':\n\t                return previous + owner.addLeadingZero(date[0]);\n\t            case 'm':\n\t                return previous + owner.addLeadingZero(date[1]);\n\t            default:\n\t                return previous + '' + (date[2] || '');\n\t            }\n\t        }, '');\n\t    },\n\n\t    getFixedDate: function (day, month, year) {\n\t        day = Math.min(day, 31);\n\t        month = Math.min(month, 12);\n\t        year = parseInt((year || 0), 10);\n\n\t        if ((month < 7 && month % 2 === 0) || (month > 8 && month % 2 === 1)) {\n\t            day = Math.min(day, month === 2 ? (this.isLeapYear(year) ? 29 : 28) : 30);\n\t        }\n\n\t        return [day, month, year];\n\t    },\n\n\t    isLeapYear: function (year) {\n\t        return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\n\t    },\n\n\t    addLeadingZero: function (number) {\n\t        return (number < 10 ? '0' : '') + number;\n\t    }\n\t};\n\n\tmodule.exports = DateFormatter;\n\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\tvar PhoneFormatter = function (formatter, delimiter) {\n\t    var owner = this;\n\n\t    owner.delimiter = (delimiter || delimiter === '') ? delimiter : ' ';\n\t    owner.delimiterRE = delimiter ? new RegExp('\\\\' + delimiter, 'g') : '';\n\n\t    owner.formatter = formatter;\n\t};\n\n\tPhoneFormatter.prototype = {\n\t    setFormatter: function (formatter) {\n\t        this.formatter = formatter;\n\t    },\n\n\t    format: function (phoneNumber) {\n\t        var owner = this;\n\n\t        owner.formatter.clear();\n\n\t        // only keep number and +\n\t        phoneNumber = phoneNumber.replace(/[^\\d+]/g, '');\n\n\t        // strip delimiter\n\t        phoneNumber = phoneNumber.replace(owner.delimiterRE, '');\n\n\t        var result = '', current, validated = false;\n\n\t        for (var i = 0, iMax = phoneNumber.length; i < iMax; i++) {\n\t            current = owner.formatter.inputDigit(phoneNumber.charAt(i));\n\n\t            // has ()- or space inside\n\t            if (/[\\s()-]/g.test(current)) {\n\t                result = current;\n\n\t                validated = true;\n\t            } else {\n\t                if (!validated) {\n\t                    result = current;\n\t                }\n\t                // else: over length input\n\t                // it turns to invalid number again\n\t            }\n\t        }\n\n\t        // strip ()\n\t        // e.g. US: 7161234567 returns (716) 123-4567\n\t        result = result.replace(/[()]/g, '');\n\t        // replace library delimiter with user customized delimiter\n\t        result = result.replace(/[\\s-]/g, owner.delimiter);\n\n\t        return result;\n\t    }\n\t};\n\n\tmodule.exports = PhoneFormatter;\n\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\tvar CreditCardDetector = {\n\t    blocks: {\n\t        uatp:          [4, 5, 6],\n\t        amex:          [4, 6, 5],\n\t        diners:        [4, 6, 4],\n\t        discover:      [4, 4, 4, 4],\n\t        mastercard:    [4, 4, 4, 4],\n\t        dankort:       [4, 4, 4, 4],\n\t        instapayment:  [4, 4, 4, 4],\n\t        jcb:           [4, 4, 4, 4],\n\t        maestro:       [4, 4, 4, 4],\n\t        visa:          [4, 4, 4, 4],\n\t        mir:           [4, 4, 4, 4],\n\t        general:       [4, 4, 4, 4],\n\t        unionPay:      [4, 4, 4, 4],\n\t        generalStrict: [4, 4, 4, 7]\n\t    },\n\n\t    re: {\n\t        // starts with 1; 15 digits, not starts with 1800 (jcb card)\n\t        uatp: /^(?!1800)1\\d{0,14}/,\n\n\t        // starts with 34/37; 15 digits\n\t        amex: /^3[47]\\d{0,13}/,\n\n\t        // starts with 6011/65/644-649; 16 digits\n\t        discover: /^(?:6011|65\\d{0,2}|64[4-9]\\d?)\\d{0,12}/,\n\n\t        // starts with 300-305/309 or 36/38/39; 14 digits\n\t        diners: /^3(?:0([0-5]|9)|[689]\\d?)\\d{0,11}/,\n\n\t        // starts with 51-55/2221–2720; 16 digits\n\t        mastercard: /^(5[1-5]\\d{0,2}|22[2-9]\\d{0,1}|2[3-7]\\d{0,2})\\d{0,12}/,\n\n\t        // starts with 5019/4175/4571; 16 digits\n\t        dankort: /^(5019|4175|4571)\\d{0,12}/,\n\n\t        // starts with 637-639; 16 digits\n\t        instapayment: /^63[7-9]\\d{0,13}/,\n\n\t        // starts with 2131/1800/35; 16 digits\n\t        jcb: /^(?:2131|1800|35\\d{0,2})\\d{0,12}/,\n\n\t        // starts with 50/56-58/6304/67; 16 digits\n\t        maestro: /^(?:5[0678]\\d{0,2}|6304|67\\d{0,2})\\d{0,12}/,\n\t        \n\t        // starts with 22; 16 digits\n\t        mir: /^220[0-4]\\d{0,12}/,\n\n\t        // starts with 4; 16 digits\n\t        visa: /^4\\d{0,15}/,\n\n\t        // starts with 62; 16 digits\n\t        unionPay: /^62\\d{0,14}/\n\t    },\n\n\t    getInfo: function (value, strictMode) {\n\t        var blocks = CreditCardDetector.blocks,\n\t            re = CreditCardDetector.re;\n\n\t        // In theory, visa credit card can have up to 19 digits number.\n\t        // Set strictMode to true will remove the 16 max-length restrain,\n\t        // however, I never found any website validate card number like\n\t        // this, hence probably you don't need to enable this option.\n\t        strictMode = !!strictMode;\n\n\t        for (var key in re) {\n\t            if (re[key].test(value)) {\n\t                var block;\n\t                if (\n\t                    key === 'discover' ||\n\t                    key === 'maestro' ||\n\t                    key === 'visa' ||\n\t                    key === 'mir' ||\n\t                    key === 'unionPay'\n\t                ) {\n\t                    block = strictMode ? blocks.generalStrict : blocks[key];\n\t                } else {\n\t                    block = blocks[key];\n\t                }\n\t                return {\n\t                    type: key,\n\t                    blocks: block\n\t                };\n\t            }\n\t        }\n\n\t        return {\n\t            type:   'unknown',\n\t            blocks: strictMode ? blocks.generalStrict : blocks.general\n\t        };\n\t    }\n\t};\n\n\tmodule.exports = CreditCardDetector;\n\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\tvar Util = {\n\t    noop: function () {\n\t    },\n\n\t    strip: function (value, re) {\n\t        return value.replace(re, '');\n\t    },\n\n\t    isDelimiter: function (letter, delimiter, delimiters) {\n\t        // single delimiter\n\t        if (delimiters.length === 0) {\n\t            return letter === delimiter;\n\t        }\n\n\t        // multiple delimiters\n\t        return delimiters.some(function (current) {\n\t            if (letter === current) {\n\t                return true;\n\t            }\n\t        });\n\t    },\n\n\t    getDelimiterREByDelimiter: function (delimiter) {\n\t        return new RegExp(delimiter.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1'), 'g');\n\t    },\n\n\t    stripDelimiters: function (value, delimiter, delimiters) {\n\t        var owner = this;\n\n\t        // single delimiter\n\t        if (delimiters.length === 0) {\n\t            var delimiterRE = delimiter ? owner.getDelimiterREByDelimiter(delimiter) : '';\n\n\t            return value.replace(delimiterRE, '');\n\t        }\n\n\t        // multiple delimiters\n\t        delimiters.forEach(function (current) {\n\t            value = value.replace(owner.getDelimiterREByDelimiter(current), '');\n\t        });\n\n\t        return value;\n\t    },\n\n\t    headStr: function (str, length) {\n\t        return str.slice(0, length);\n\t    },\n\n\t    getMaxLength: function (blocks) {\n\t        return blocks.reduce(function (previous, current) {\n\t            return previous + current;\n\t        }, 0);\n\t    },\n\n\t    // strip value by prefix length\n\t    // for prefix: PRE\n\t    // (PRE123, 3) -> 123\n\t    // (PR123, 3) -> 23 this happens when user hits backspace in front of \"PRE\"\n\t    getPrefixStrippedValue: function (value, prefix, prefixLength) {\n\t        if (value.slice(0, prefixLength) !== prefix) {\n\t            var diffIndex = this.getFirstDiffIndex(prefix, value.slice(0, prefixLength));\n\n\t            value = prefix + value.slice(diffIndex, diffIndex + 1) + value.slice(prefixLength + 1);\n\t        }\n\n\t        return value.slice(prefixLength);\n\t    },\n\n\t    getFirstDiffIndex: function (prev, current) {\n\t        var index = 0;\n\n\t        while (prev.charAt(index) === current.charAt(index)) {\n\t            if (prev.charAt(index++) === '') {\n\t                return -1;\n\t            }\n\t        }\n\n\t        return index;\n\t    },\n\n\t    getFormattedValue: function (value, blocks, blocksLength, delimiter, delimiters, delimiterLazyShow) {\n\t        var result = '',\n\t            multipleDelimiters = delimiters.length > 0,\n\t            currentDelimiter;\n\n\t        // no options, normal input\n\t        if (blocksLength === 0) {\n\t            return value;\n\t        }\n\n\t        blocks.forEach(function (length, index) {\n\t            if (value.length > 0) {\n\t                var sub = value.slice(0, length),\n\t                    rest = value.slice(length);\n\n\t                if (multipleDelimiters) {\n\t                    currentDelimiter = delimiters[delimiterLazyShow ? (index - 1) : index] || currentDelimiter;\n\t                } else {\n\t                    currentDelimiter = delimiter;\n\t                }\n\n\t                if (delimiterLazyShow) {\n\t                    if (index > 0) {\n\t                        result += currentDelimiter;\n\t                    }\n\n\t                    result += sub;\n\t                } else {\n\t                    result += sub;\n\n\t                    if (sub.length === length && index < blocksLength - 1) {\n\t                        result += currentDelimiter;\n\t                    }\n\t                }\n\n\t                // update remaining string\n\t                value = rest;\n\t            }\n\t        });\n\n\t        return result;\n\t    },\n\n\t    isAndroid: function () {\n\t        return navigator && /android/i.test(navigator.userAgent);\n\t    },\n\n\t    // On Android chrome, the keyup and keydown events\n\t    // always return key code 229 as a composition that\n\t    // buffers the user’s keystrokes\n\t    // see https://github.com/nosir/cleave.js/issues/147\n\t    isAndroidBackspaceKeydown: function (lastInputValue, currentInputValue) {\n\t        if (!this.isAndroid() || !lastInputValue || !currentInputValue) {\n\t            return false;\n\t        }\n\n\t        return currentInputValue === lastInputValue.slice(0, -1);\n\t    }\n\t};\n\n\tmodule.exports = Util;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\n\t/**\n\t * Props Assignment\n\t *\n\t * Separate this, so react module can share the usage\n\t */\n\tvar DefaultProperties = {\n\t    // Maybe change to object-assign\n\t    // for now just keep it as simple\n\t    assign: function (target, opts) {\n\t        target = target || {};\n\t        opts = opts || {};\n\n\t        // credit card\n\t        target.creditCard = !!opts.creditCard;\n\t        target.creditCardStrictMode = !!opts.creditCardStrictMode;\n\t        target.creditCardType = '';\n\t        target.onCreditCardTypeChanged = opts.onCreditCardTypeChanged || (function () {});\n\n\t        // phone\n\t        target.phone = !!opts.phone;\n\t        target.phoneRegionCode = opts.phoneRegionCode || 'AU';\n\t        target.phoneFormatter = {};\n\n\t        // date\n\t        target.date = !!opts.date;\n\t        target.datePattern = opts.datePattern || ['d', 'm', 'Y'];\n\t        target.dateFormatter = {};\n\n\t        // numeral\n\t        target.numeral = !!opts.numeral;\n\t        target.numeralIntegerScale = opts.numeralIntegerScale > 0 ? opts.numeralIntegerScale : 0;\n\t        target.numeralDecimalScale = opts.numeralDecimalScale >= 0 ? opts.numeralDecimalScale : 2;\n\t        target.numeralDecimalMark = opts.numeralDecimalMark || '.';\n\t        target.numeralThousandsGroupStyle = opts.numeralThousandsGroupStyle || 'thousand';\n\t        target.numeralPositiveOnly = !!opts.numeralPositiveOnly;\n\t        target.stripLeadingZeroes = opts.stripLeadingZeroes !== false;\n\n\t        // others\n\t        target.numericOnly = target.creditCard || target.date || !!opts.numericOnly;\n\n\t        target.uppercase = !!opts.uppercase;\n\t        target.lowercase = !!opts.lowercase;\n\n\t        target.prefix = (target.creditCard || target.date) ? '' : (opts.prefix || '');\n\t        target.noImmediatePrefix = !!opts.noImmediatePrefix;\n\t        target.prefixLength = target.prefix.length;\n\t        target.rawValueTrimPrefix = !!opts.rawValueTrimPrefix;\n\t        target.copyDelimiter = !!opts.copyDelimiter;\n\n\t        target.initValue = (opts.initValue !== undefined && opts.initValue !== null) ? opts.initValue.toString() : '';\n\n\t        target.delimiter =\n\t            (opts.delimiter || opts.delimiter === '') ? opts.delimiter :\n\t                (opts.date ? '/' :\n\t                    (opts.numeral ? ',' :\n\t                        (opts.phone ? ' ' :\n\t                            ' ')));\n\t        target.delimiterLength = target.delimiter.length;\n\t        target.delimiterLazyShow = !!opts.delimiterLazyShow;\n\t        target.delimiters = opts.delimiters || [];\n\n\t        target.blocks = opts.blocks || [];\n\t        target.blocksLength = target.blocks.length;\n\n\t        target.root = (typeof global === 'object' && global) ? global : window;\n\n\t        target.maxLength = 0;\n\n\t        target.backspace = false;\n\t        target.result = '';\n\n\t        return target;\n\t    }\n\t};\n\n\tmodule.exports = DefaultProperties;\n\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ })\n/******/ ])\n});\n;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/cleave.js/dist/cleave.js\n// module id = 743\n// module chunks = 27 34","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('b-field', [_c('b-input', {\n    directives: [{\n      name: \"cleave\",\n      rawName: \"v-cleave\",\n      value: (_vm.masks.creditCard),\n      expression: \"masks.creditCard\"\n    }],\n    attrs: {\n      \"placeholder\": \"Credit Card\"\n    }\n  })], 1), _vm._v(\" \"), _c('b-field', [_c('b-input', {\n    directives: [{\n      name: \"cleave\",\n      rawName: \"v-cleave\",\n      value: (_vm.masks.numeral),\n      expression: \"masks.numeral\"\n    }],\n    attrs: {\n      \"placeholder\": \"Numeral\"\n    }\n  })], 1), _vm._v(\" \"), _c('b-field', {\n    attrs: {\n      \"addons\": false\n    }\n  }, [_c('b-input', {\n    directives: [{\n      name: \"cleave\",\n      rawName: \"v-cleave\",\n      value: (_vm.masks.custom),\n      expression: \"masks.custom\"\n    }],\n    attrs: {\n      \"placeholder\": \"Custom\"\n    },\n    nativeOn: {\n      \"input\": function($event) {\n        _vm.getRawValue($event)\n      }\n    },\n    model: {\n      value: (_vm.value),\n      callback: function($$v) {\n        _vm.value = $$v\n      },\n      expression: \"value\"\n    }\n  }), _vm._v(\" \"), _c('p', [_c('b', [_vm._v(\"Formatted value (v-model)\")]), _vm._v(\": \" + _vm._s(_vm.value))]), _vm._v(\" \"), _c('p', [_c('b', [_vm._v(\"Raw value\")]), _vm._v(\": \" + _vm._s(_vm.rawValue))])], 1)], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-62f8b29c\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./docs/pages/extensions/cleavejs/examples/ExFormat.vue\n// module id = 827\n// module chunks = 27 34","<template>\n    <div class=\"default-container\">\n        <h1 class=\"title is-spaced\">Cleave.js </h1>\n        <h2 class=\"subtitle\">Format input text while you type — as a Vue directive</h2>\n        <div class=\"buttons\">\n            <a\n                class=\"button\"\n                href=\"https://nosir.github.io/cleave.js\"\n                target=\"_blank\">\n                Website\n            </a>\n            <a\n                class=\"button\"\n                href=\"https://github.com/nosir/cleave.js/blob/master/doc/options.md\"\n                target=\"_blank\">\n                Docs\n            </a>\n        </div>\n\n        <Example :component=\"ExFormat\" :code=\"ExFormatCode\" vertical>\n            <b-message type=\"is-info\">\n                <p><strong>Cleave.js is not included in Buefy</strong>, you have to install it:</p>\n                <CodeView code=\"npm install cleave.js\" expanded/>\n            </b-message>\n        </Example>\n    </div>\n</template>\n\n<script>\n    import ExFormat from './examples/ExFormat'\n    import ExFormatCode from '!!raw-loader!./examples/ExFormat'\n\n    export default {\n        data() {\n            return {\n                ExFormat,\n                ExFormatCode\n            }\n        }\n    }\n</script>\n\n\n\n// WEBPACK FOOTER //\n// Cleavejs.vue?488bee78"],"sourceRoot":""}