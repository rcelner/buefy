{"version":3,"sources":["webpack:///static/js/34.535257ed8a6d9c9ea87c.js","webpack:///./docs/pages/extensions/cleavejs/examples/ExFormat.vue?b21f*","webpack:///ExFormat.vue?3119","webpack:///./~/cleave.js/dist/cleave.js?f6b1","webpack:///./docs/pages/extensions/cleavejs/examples/ExFormat.vue?5589*"],"names":["webpackJsonp","227","module","exports","__webpack_require__","Component","740","__webpack_exports__","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0_cleave_js__","__WEBPACK_IMPORTED_MODULE_0_cleave_js___default","n","cleave","name","bind","el","binding","input","querySelector","_vCleave","a","update","destroy","unbind","directives","data","rawValue","masks","creditCard","numeral","numeralThousandsGroupStyle","prefix","custom","delimiters","blocks","numericOnly","methods","getRawValue","event","this","target","743","root","factory","modules","moduleId","installedModules","id","loaded","call","m","c","p","global","Cleave","element","opts","owner","document","length","Error","initValue","properties","DefaultProperties","assign","init","prototype","pps","phone","date","blocksLength","onInput","maxLength","Util","getMaxLength","isAndroid","lastInputValue","onChangeListener","onChange","onKeyDownListener","onKeyDown","onCutListener","onCut","onCopyListener","onCopy","addEventListener","initPhoneFormatter","initDateFormatter","initNumeralFormatter","noImmediatePrefix","numeralFormatter","NumeralFormatter","numeralDecimalMark","numeralIntegerScale","numeralDecimalScale","numeralPositiveOnly","stripLeadingZeroes","delimiter","dateFormatter","DateFormatter","datePattern","getBlocks","phoneFormatter","PhoneFormatter","AsYouTypeFormatter","phoneRegionCode","ex","charCode","which","keyCode","currentValue","isAndroidBackspaceKeydown","isDelimiter","slice","delimiterLength","backspace","e","copyClipboardData","inputValue","textToCopy","copyDelimiter","stripDelimiters","clipboardData","setData","window","preventDefault","headStr","result","format","updateValueState","getValidatedDate","getPrefixStrippedValue","prefixLength","strip","uppercase","toUpperCase","lowercase","toLowerCase","updateCreditCardPropsByValue","getFormattedValue","delimiterLazyShow","creditCardInfo","CreditCardDetector","getInfo","creditCardStrictMode","creditCardType","type","onCreditCardTypeChanged","setCurrentSelection","endPos","oldValue","elem","activeElement","createTextRange","range","move","select","setSelectionRange","selectionEnd","setTimeout","setPhoneRegionCode","setRawValue","undefined","toString","replace","rawValueTrimPrefix","getISOFormatDate","removeEventListener","groupStyle","thousand","delimiterRE","RegExp","lakh","wan","none","parts","partInteger","partDecimal","indexOf","split","initBlocks","forEach","push","addLeadingZero","index","sub","sub0","rest","parseInt","getFixedDateString","day","month","year","dayIndex","monthIndex","yearIndex","dayStartIndex","monthStartIndex","yearStartIndex","getFixedDate","reduce","previous","current","Math","min","isLeapYear","number","formatter","setFormatter","phoneNumber","clear","validated","i","iMax","inputDigit","charAt","test","uatp","amex","diners","discover","mastercard","dankort","instapayment","jcb","maestro","visa","mir","general","unionPay","generalStrict","re","strictMode","key","block","noop","letter","some","getDelimiterREByDelimiter","str","diffIndex","getFirstDiffIndex","prev","currentDelimiter","multipleDelimiters","navigator","userAgent","currentInputValue","827","render","_vm","_h","$createElement","_c","_self","rawName","expression","attrs","placeholder","_v","addons","nativeOn","$event","model","callback","$$v","_s","staticRenderFns"],"mappings":"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","file":"static/js/34.535257ed8a6d9c9ea87c.js","sourcesContent":["webpackJsonp([34],{\n\n/***/ 227:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(0)(\n  /* script */\n  __webpack_require__(740),\n  /* template */\n  __webpack_require__(827),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 740:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_cleave_js__ = __webpack_require__(743);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_cleave_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_cleave_js__);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// You have to install cleave.js to use it:\n// 'npm install cleave.js'\n\n\n/**\n * We add a new instance of Cleave when the element\n * is bound or updated, and destroy it when it's unbound.\n */\nvar cleave = {\n    name: 'cleave',\n    bind: function bind(el, binding) {\n        var input = el.querySelector('input');\n        input._vCleave = new __WEBPACK_IMPORTED_MODULE_0_cleave_js___default.a(input, binding.value);\n    },\n    update: function update(el, binding) {\n        var input = el.querySelector('input');\n        input._vCleave.destroy();\n        input._vCleave = new __WEBPACK_IMPORTED_MODULE_0_cleave_js___default.a(input, binding.value);\n    },\n    unbind: function unbind(el) {\n        var input = el.querySelector('input');\n        input._vCleave.destroy();\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    directives: { cleave: cleave },\n    data: function data() {\n        return {\n            value: '',\n            rawValue: '',\n            masks: {\n                creditCard: { creditCard: true },\n                numeral: {\n                    numeral: true,\n                    numeralThousandsGroupStyle: 'thousand',\n                    prefix: '$ '\n                },\n                custom: {\n                    delimiters: ['.', '.', '-'],\n                    blocks: [3, 3, 3, 2],\n                    numericOnly: true\n                }\n            }\n        };\n    },\n\n    methods: {\n        getRawValue: function getRawValue(event) {\n            this.rawValue = event.target._vCleave.getRawValue();\n        }\n    }\n});\n\n/***/ }),\n\n/***/ 743:\n/***/ (function(module, exports, __webpack_require__) {\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Cleave\"] = factory();\n\telse\n\t\troot[\"Cleave\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\n\t/**\n\t * Construct a new Cleave instance by passing the configuration object\n\t *\n\t * @param {String | HTMLElement} element\n\t * @param {Object} opts\n\t */\n\tvar Cleave = function (element, opts) {\n\t    var owner = this;\n\n\t    if (typeof element === 'string') {\n\t        owner.element = document.querySelector(element);\n\t    } else {\n\t        owner.element = ((typeof element.length !== 'undefined') && element.length > 0) ? element[0] : element;\n\t    }\n\n\t    if (!owner.element) {\n\t        throw new Error('[cleave.js] Please check the element');\n\t    }\n\n\t    opts.initValue = owner.element.value;\n\n\t    owner.properties = Cleave.DefaultProperties.assign({}, opts);\n\n\t    owner.init();\n\t};\n\n\tCleave.prototype = {\n\t    init: function () {\n\t        var owner = this, pps = owner.properties;\n\n\t        // no need to use this lib\n\t        if (!pps.numeral && !pps.phone && !pps.creditCard && !pps.date && (pps.blocksLength === 0 && !pps.prefix)) {\n\t            owner.onInput(pps.initValue);\n\n\t            return;\n\t        }\n\n\t        pps.maxLength = Cleave.Util.getMaxLength(pps.blocks);\n\n\t        owner.isAndroid = Cleave.Util.isAndroid();\n\t        owner.lastInputValue = '';\n\n\t        owner.onChangeListener = owner.onChange.bind(owner);\n\t        owner.onKeyDownListener = owner.onKeyDown.bind(owner);\n\t        owner.onCutListener = owner.onCut.bind(owner);\n\t        owner.onCopyListener = owner.onCopy.bind(owner);\n\n\t        owner.element.addEventListener('input', owner.onChangeListener);\n\t        owner.element.addEventListener('keydown', owner.onKeyDownListener);\n\t        owner.element.addEventListener('cut', owner.onCutListener);\n\t        owner.element.addEventListener('copy', owner.onCopyListener);\n\n\n\t        owner.initPhoneFormatter();\n\t        owner.initDateFormatter();\n\t        owner.initNumeralFormatter();\n\n\t        // avoid touch input field if value is null\n\t        // otherwise Firefox will add red box-shadow for <input required />\n\t        if (pps.initValue || (pps.prefix && !pps.noImmediatePrefix)) {\n\t            owner.onInput(pps.initValue);\n\t        }\n\t    },\n\n\t    initNumeralFormatter: function () {\n\t        var owner = this, pps = owner.properties;\n\n\t        if (!pps.numeral) {\n\t            return;\n\t        }\n\n\t        pps.numeralFormatter = new Cleave.NumeralFormatter(\n\t            pps.numeralDecimalMark,\n\t            pps.numeralIntegerScale,\n\t            pps.numeralDecimalScale,\n\t            pps.numeralThousandsGroupStyle,\n\t            pps.numeralPositiveOnly,\n\t            pps.stripLeadingZeroes,\n\t            pps.delimiter\n\t        );\n\t    },\n\n\t    initDateFormatter: function () {\n\t        var owner = this, pps = owner.properties;\n\n\t        if (!pps.date) {\n\t            return;\n\t        }\n\n\t        pps.dateFormatter = new Cleave.DateFormatter(pps.datePattern);\n\t        pps.blocks = pps.dateFormatter.getBlocks();\n\t        pps.blocksLength = pps.blocks.length;\n\t        pps.maxLength = Cleave.Util.getMaxLength(pps.blocks);\n\t    },\n\n\t    initPhoneFormatter: function () {\n\t        var owner = this, pps = owner.properties;\n\n\t        if (!pps.phone) {\n\t            return;\n\t        }\n\n\t        // Cleave.AsYouTypeFormatter should be provided by\n\t        // external google closure lib\n\t        try {\n\t            pps.phoneFormatter = new Cleave.PhoneFormatter(\n\t                new pps.root.Cleave.AsYouTypeFormatter(pps.phoneRegionCode),\n\t                pps.delimiter\n\t            );\n\t        } catch (ex) {\n\t            throw new Error('[cleave.js] Please include phone-type-formatter.{country}.js lib');\n\t        }\n\t    },\n\n\t    onKeyDown: function (event) {\n\t        var owner = this, pps = owner.properties,\n\t            charCode = event.which || event.keyCode,\n\t            Util = Cleave.Util,\n\t            currentValue = owner.element.value;\n\n\t        if (Util.isAndroidBackspaceKeydown(owner.lastInputValue, currentValue)) {\n\t            charCode = 8;\n\t        }\n\n\t        owner.lastInputValue = currentValue;\n\n\t        // hit backspace when last character is delimiter\n\t        if (charCode === 8 && Util.isDelimiter(currentValue.slice(-pps.delimiterLength), pps.delimiter, pps.delimiters)) {\n\t            pps.backspace = true;\n\n\t            return;\n\t        }\n\n\t        pps.backspace = false;\n\t    },\n\n\t    onChange: function () {\n\t        this.onInput(this.element.value);\n\t    },\n\n\t    onCut: function (e) {\n\t        this.copyClipboardData(e);\n\t        this.onInput('');\n\t    },\n\n\t    onCopy: function (e) {\n\t        this.copyClipboardData(e);\n\t    },\n\n\t    copyClipboardData: function (e) {\n\t        var owner = this,\n\t            pps = owner.properties,\n\t            Util = Cleave.Util,\n\t            inputValue = owner.element.value,\n\t            textToCopy = '';\n\n\t        if (!pps.copyDelimiter) {\n\t            textToCopy = Util.stripDelimiters(inputValue, pps.delimiter, pps.delimiters);\n\t        } else {\n\t            textToCopy = inputValue;\n\t        }\n\n\t        try {\n\t            if (e.clipboardData) {\n\t                e.clipboardData.setData('Text', textToCopy);\n\t            } else {\n\t                window.clipboardData.setData('Text', textToCopy);\n\t            }\n\n\t            e.preventDefault();\n\t        } catch (ex) {\n\t            //  empty\n\t        }\n\t    },\n\n\t    onInput: function (value) {\n\t        var owner = this, pps = owner.properties,\n\t            Util = Cleave.Util;\n\n\t        // case 1: delete one more character \"4\"\n\t        // 1234*| -> hit backspace -> 123|\n\t        // case 2: last character is not delimiter which is:\n\t        // 12|34* -> hit backspace -> 1|34*\n\t        // note: no need to apply this for numeral mode\n\t        if (!pps.numeral && pps.backspace && !Util.isDelimiter(value.slice(-pps.delimiterLength), pps.delimiter, pps.delimiters)) {\n\t            value = Util.headStr(value, value.length - pps.delimiterLength);\n\t        }\n\n\t        // phone formatter\n\t        if (pps.phone) {\n\t            if (pps.prefix && (!pps.noImmediatePrefix || value.length)) {\n\t                pps.result = pps.prefix + pps.phoneFormatter.format(value).slice(pps.prefix.length);\n\t            } else {\n\t                pps.result = pps.phoneFormatter.format(value);\n\t            }\n\t            owner.updateValueState();\n\n\t            return;\n\t        }\n\n\t        // numeral formatter\n\t        if (pps.numeral) {\n\t            if (pps.prefix && (!pps.noImmediatePrefix || value.length)) {\n\t                pps.result = pps.prefix + pps.numeralFormatter.format(value);\n\t            } else {\n\t                pps.result = pps.numeralFormatter.format(value);\n\t            }\n\t            owner.updateValueState();\n\n\t            return;\n\t        }\n\n\t        // date\n\t        if (pps.date) {\n\t            value = pps.dateFormatter.getValidatedDate(value);\n\t        }\n\n\t        // strip delimiters\n\t        value = Util.stripDelimiters(value, pps.delimiter, pps.delimiters);\n\n\t        // strip prefix\n\t        value = Util.getPrefixStrippedValue(value, pps.prefix, pps.prefixLength);\n\n\t        // strip non-numeric characters\n\t        value = pps.numericOnly ? Util.strip(value, /[^\\d]/g) : value;\n\n\t        // convert case\n\t        value = pps.uppercase ? value.toUpperCase() : value;\n\t        value = pps.lowercase ? value.toLowerCase() : value;\n\n\t        // prefix\n\t        if (pps.prefix && (!pps.noImmediatePrefix || value.length)) {\n\t            value = pps.prefix + value;\n\n\t            // no blocks specified, no need to do formatting\n\t            if (pps.blocksLength === 0) {\n\t                pps.result = value;\n\t                owner.updateValueState();\n\n\t                return;\n\t            }\n\t        }\n\n\t        // update credit card props\n\t        if (pps.creditCard) {\n\t            owner.updateCreditCardPropsByValue(value);\n\t        }\n\n\t        // strip over length characters\n\t        value = Util.headStr(value, pps.maxLength);\n\n\t        // apply blocks\n\t        pps.result = Util.getFormattedValue(\n\t            value,\n\t            pps.blocks, pps.blocksLength,\n\t            pps.delimiter, pps.delimiters, pps.delimiterLazyShow\n\t        );\n\n\t        owner.updateValueState();\n\t    },\n\n\t    updateCreditCardPropsByValue: function (value) {\n\t        var owner = this, pps = owner.properties,\n\t            Util = Cleave.Util,\n\t            creditCardInfo;\n\n\t        // At least one of the first 4 characters has changed\n\t        if (Util.headStr(pps.result, 4) === Util.headStr(value, 4)) {\n\t            return;\n\t        }\n\n\t        creditCardInfo = Cleave.CreditCardDetector.getInfo(value, pps.creditCardStrictMode);\n\n\t        pps.blocks = creditCardInfo.blocks;\n\t        pps.blocksLength = pps.blocks.length;\n\t        pps.maxLength = Util.getMaxLength(pps.blocks);\n\n\t        // credit card type changed\n\t        if (pps.creditCardType !== creditCardInfo.type) {\n\t            pps.creditCardType = creditCardInfo.type;\n\n\t            pps.onCreditCardTypeChanged.call(owner, pps.creditCardType);\n\t        }\n\t    },\n\n\t    setCurrentSelection: function (endPos, oldValue) {\n\t        var elem = this.element;\n\n\t        // If cursor was at the end of value, just place it back.\n\t        // Because new value could contain additional chars.\n\t        if (oldValue.length !== endPos && elem === document.activeElement) {\n\t          if ( elem.createTextRange ) {\n\t            var range = elem.createTextRange();\n\n\t            range.move('character', endPos);\n\t            range.select();\n\t          } else {\n\t            elem.setSelectionRange(endPos, endPos);\n\t          }\n\t        }\n\t    },\n\n\t    updateValueState: function () {\n\t        var owner = this;\n\n\t        if (!owner.element) {\n\t            return;\n\t        }\n\n\t        var endPos = owner.element.selectionEnd;\n\t        var oldValue = owner.element.value;\n\n\t        // fix Android browser type=\"text\" input field\n\t        // cursor not jumping issue\n\t        if (owner.isAndroid) {\n\t            window.setTimeout(function () {\n\t                owner.element.value = owner.properties.result;\n\t                owner.setCurrentSelection(endPos, oldValue);\n\t            }, 1);\n\n\t            return;\n\t        }\n\n\t        owner.element.value = owner.properties.result;\n\t        owner.setCurrentSelection(endPos, oldValue);\n\t    },\n\n\t    setPhoneRegionCode: function (phoneRegionCode) {\n\t        var owner = this, pps = owner.properties;\n\n\t        pps.phoneRegionCode = phoneRegionCode;\n\t        owner.initPhoneFormatter();\n\t        owner.onChange();\n\t    },\n\n\t    setRawValue: function (value) {\n\t        var owner = this, pps = owner.properties;\n\n\t        value = value !== undefined && value !== null ? value.toString() : '';\n\n\t        if (pps.numeral) {\n\t            value = value.replace('.', pps.numeralDecimalMark);\n\t        }\n\n\t        pps.backspace = false;\n\t        \n\t        owner.element.value = value;\n\t        owner.onInput(value);\n\t    },\n\n\t    getRawValue: function () {\n\t        var owner = this,\n\t            pps = owner.properties,\n\t            Util = Cleave.Util,\n\t            rawValue = owner.element.value;\n\n\t        if (pps.rawValueTrimPrefix) {\n\t            rawValue = Util.getPrefixStrippedValue(rawValue, pps.prefix, pps.prefixLength);\n\t        }\n\n\t        if (pps.numeral) {\n\t            rawValue = pps.numeralFormatter.getRawValue(rawValue);\n\t        } else {\n\t            rawValue = Util.stripDelimiters(rawValue, pps.delimiter, pps.delimiters);\n\t        }\n\n\t        return rawValue;\n\t    },\n\n\t    getISOFormatDate: function () {\n\t        var owner = this,\n\t            pps = owner.properties;\n\n\t        return pps.date ? pps.dateFormatter.getISOFormatDate() : '';\n\t    },\n\n\t    getFormattedValue: function () {\n\t        return this.element.value;\n\t    },\n\n\t    destroy: function () {\n\t        var owner = this;\n\n\t        owner.element.removeEventListener('input', owner.onChangeListener);\n\t        owner.element.removeEventListener('keydown', owner.onKeyDownListener);\n\t        owner.element.removeEventListener('cut', owner.onCutListener);\n\t        owner.element.removeEventListener('copy', owner.onCopyListener);\n\t    },\n\n\t    toString: function () {\n\t        return '[Cleave Object]';\n\t    }\n\t};\n\n\tCleave.NumeralFormatter = __webpack_require__(1);\n\tCleave.DateFormatter = __webpack_require__(2);\n\tCleave.PhoneFormatter = __webpack_require__(3);\n\tCleave.CreditCardDetector = __webpack_require__(4);\n\tCleave.Util = __webpack_require__(5);\n\tCleave.DefaultProperties = __webpack_require__(6);\n\n\t// for angular directive\n\t((typeof global === 'object' && global) ? global : window)['Cleave'] = Cleave;\n\n\t// CommonJS\n\tmodule.exports = Cleave;\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\tvar NumeralFormatter = function (numeralDecimalMark,\n\t                                 numeralIntegerScale,\n\t                                 numeralDecimalScale,\n\t                                 numeralThousandsGroupStyle,\n\t                                 numeralPositiveOnly,\n\t                                 stripLeadingZeroes,\n\t                                 delimiter) {\n\t    var owner = this;\n\n\t    owner.numeralDecimalMark = numeralDecimalMark || '.';\n\t    owner.numeralIntegerScale = numeralIntegerScale > 0 ? numeralIntegerScale : 0;\n\t    owner.numeralDecimalScale = numeralDecimalScale >= 0 ? numeralDecimalScale : 2;\n\t    owner.numeralThousandsGroupStyle = numeralThousandsGroupStyle || NumeralFormatter.groupStyle.thousand;\n\t    owner.numeralPositiveOnly = !!numeralPositiveOnly;\n\t    owner.stripLeadingZeroes = stripLeadingZeroes !== false;\n\t    owner.delimiter = (delimiter || delimiter === '') ? delimiter : ',';\n\t    owner.delimiterRE = delimiter ? new RegExp('\\\\' + delimiter, 'g') : '';\n\t};\n\n\tNumeralFormatter.groupStyle = {\n\t    thousand: 'thousand',\n\t    lakh:     'lakh',\n\t    wan:      'wan',\n\t    none:     'none'    \n\t};\n\n\tNumeralFormatter.prototype = {\n\t    getRawValue: function (value) {\n\t        return value.replace(this.delimiterRE, '').replace(this.numeralDecimalMark, '.');\n\t    },\n\n\t    format: function (value) {\n\t        var owner = this, parts, partInteger, partDecimal = '';\n\n\t        // strip alphabet letters\n\t        value = value.replace(/[A-Za-z]/g, '')\n\t            // replace the first decimal mark with reserved placeholder\n\t            .replace(owner.numeralDecimalMark, 'M')\n\n\t            // strip non numeric letters except minus and \"M\"\n\t            // this is to ensure prefix has been stripped\n\t            .replace(/[^\\dM-]/g, '')\n\n\t            // replace the leading minus with reserved placeholder\n\t            .replace(/^\\-/, 'N')\n\n\t            // strip the other minus sign (if present)\n\t            .replace(/\\-/g, '')\n\n\t            // replace the minus sign (if present)\n\t            .replace('N', owner.numeralPositiveOnly ? '' : '-')\n\n\t            // replace decimal mark\n\t            .replace('M', owner.numeralDecimalMark);\n\n\t        // strip any leading zeros\n\t        if (owner.stripLeadingZeroes) {\n\t            value = value.replace(/^(-)?0+(?=\\d)/, '$1');\n\t        }\n\n\t        partInteger = value;\n\n\t        if (value.indexOf(owner.numeralDecimalMark) >= 0) {\n\t            parts = value.split(owner.numeralDecimalMark);\n\t            partInteger = parts[0];\n\t            partDecimal = owner.numeralDecimalMark + parts[1].slice(0, owner.numeralDecimalScale);\n\t        }\n\n\t        if (owner.numeralIntegerScale > 0) {\n\t          partInteger = partInteger.slice(0, owner.numeralIntegerScale + (value.slice(0, 1) === '-' ? 1 : 0));\n\t        }\n\n\t        switch (owner.numeralThousandsGroupStyle) {\n\t        case NumeralFormatter.groupStyle.lakh:\n\t            partInteger = partInteger.replace(/(\\d)(?=(\\d\\d)+\\d$)/g, '$1' + owner.delimiter);\n\n\t            break;\n\n\t        case NumeralFormatter.groupStyle.wan:\n\t            partInteger = partInteger.replace(/(\\d)(?=(\\d{4})+$)/g, '$1' + owner.delimiter);\n\n\t            break;\n\n\t        case NumeralFormatter.groupStyle.thousand:\n\t            partInteger = partInteger.replace(/(\\d)(?=(\\d{3})+$)/g, '$1' + owner.delimiter);\n\n\t            break;\n\t        }\n\n\t        return partInteger.toString() + (owner.numeralDecimalScale > 0 ? partDecimal.toString() : '');\n\t    }\n\t};\n\n\tmodule.exports = NumeralFormatter;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\tvar DateFormatter = function (datePattern) {\n\t    var owner = this;\n\n\t    owner.date = [];\n\t    owner.blocks = [];\n\t    owner.datePattern = datePattern;\n\t    owner.initBlocks();\n\t};\n\n\tDateFormatter.prototype = {\n\t    initBlocks: function () {\n\t        var owner = this;\n\t        owner.datePattern.forEach(function (value) {\n\t            if (value === 'Y') {\n\t                owner.blocks.push(4);\n\t            } else {\n\t                owner.blocks.push(2);\n\t            }\n\t        });\n\t    },\n\n\t    getISOFormatDate: function () {\n\t        var owner = this,\n\t            date = owner.date;\n\n\t        return date[2] ? (\n\t            date[2] + '-' + owner.addLeadingZero(date[1]) + '-' + owner.addLeadingZero(date[0])\n\t        ) : '';\n\t    },\n\n\t    getBlocks: function () {\n\t        return this.blocks;\n\t    },\n\n\t    getValidatedDate: function (value) {\n\t        var owner = this, result = '';\n\n\t        value = value.replace(/[^\\d]/g, '');\n\n\t        owner.blocks.forEach(function (length, index) {\n\t            if (value.length > 0) {\n\t                var sub = value.slice(0, length),\n\t                    sub0 = sub.slice(0, 1),\n\t                    rest = value.slice(length);\n\n\t                switch (owner.datePattern[index]) {\n\t                case 'd':\n\t                    if (sub === '00') {\n\t                        sub = '01';\n\t                    } else if (parseInt(sub0, 10) > 3) {\n\t                        sub = '0' + sub0;\n\t                    } else if (parseInt(sub, 10) > 31) {\n\t                        sub = '31';\n\t                    }\n\n\t                    break;\n\n\t                case 'm':\n\t                    if (sub === '00') {\n\t                        sub = '01';\n\t                    } else if (parseInt(sub0, 10) > 1) {\n\t                        sub = '0' + sub0;\n\t                    } else if (parseInt(sub, 10) > 12) {\n\t                        sub = '12';\n\t                    }\n\n\t                    break;\n\t                }\n\n\t                result += sub;\n\n\t                // update remaining string\n\t                value = rest;\n\t            }\n\t        });\n\n\t        return this.getFixedDateString(result);\n\t    },\n\n\t    getFixedDateString: function (value) {\n\t        var owner = this, datePattern = owner.datePattern, date = [],\n\t            dayIndex = 0, monthIndex = 0, yearIndex = 0,\n\t            dayStartIndex = 0, monthStartIndex = 0, yearStartIndex = 0,\n\t            day, month, year;\n\n\t        // mm-dd || dd-mm\n\t        if (value.length === 4 && datePattern[0].toLowerCase() !== 'y' && datePattern[1].toLowerCase() !== 'y') {\n\t            dayStartIndex = datePattern[0] === 'd' ? 0 : 2;\n\t            monthStartIndex = 2 - dayStartIndex;\n\t            day = parseInt(value.slice(dayStartIndex, dayStartIndex + 2), 10);\n\t            month = parseInt(value.slice(monthStartIndex, monthStartIndex + 2), 10);\n\n\t            date = this.getFixedDate(day, month, 0);\n\t        }\n\n\t        // yyyy-mm-dd || yyyy-dd-mm || mm-dd-yyyy || dd-mm-yyyy || dd-yyyy-mm || mm-yyyy-dd\n\t        if (value.length === 8) {\n\t            datePattern.forEach(function (type, index) {\n\t                switch (type) {\n\t                case 'd':\n\t                    dayIndex = index;\n\t                    break;\n\t                case 'm':\n\t                    monthIndex = index;\n\t                    break;\n\t                default:\n\t                    yearIndex = index;\n\t                    break;\n\t                }\n\t            });\n\n\t            yearStartIndex = yearIndex * 2;\n\t            dayStartIndex = (dayIndex <= yearIndex) ? dayIndex * 2 : (dayIndex * 2 + 2);\n\t            monthStartIndex = (monthIndex <= yearIndex) ? monthIndex * 2 : (monthIndex * 2 + 2);\n\n\t            day = parseInt(value.slice(dayStartIndex, dayStartIndex + 2), 10);\n\t            month = parseInt(value.slice(monthStartIndex, monthStartIndex + 2), 10);\n\t            year = parseInt(value.slice(yearStartIndex, yearStartIndex + 4), 10);\n\n\t            date = this.getFixedDate(day, month, year);\n\t        }\n\n\t        owner.date = date;\n\n\t        return date.length === 0 ? value : datePattern.reduce(function (previous, current) {\n\t            switch (current) {\n\t            case 'd':\n\t                return previous + owner.addLeadingZero(date[0]);\n\t            case 'm':\n\t                return previous + owner.addLeadingZero(date[1]);\n\t            default:\n\t                return previous + '' + (date[2] || '');\n\t            }\n\t        }, '');\n\t    },\n\n\t    getFixedDate: function (day, month, year) {\n\t        day = Math.min(day, 31);\n\t        month = Math.min(month, 12);\n\t        year = parseInt((year || 0), 10);\n\n\t        if ((month < 7 && month % 2 === 0) || (month > 8 && month % 2 === 1)) {\n\t            day = Math.min(day, month === 2 ? (this.isLeapYear(year) ? 29 : 28) : 30);\n\t        }\n\n\t        return [day, month, year];\n\t    },\n\n\t    isLeapYear: function (year) {\n\t        return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\n\t    },\n\n\t    addLeadingZero: function (number) {\n\t        return (number < 10 ? '0' : '') + number;\n\t    }\n\t};\n\n\tmodule.exports = DateFormatter;\n\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\tvar PhoneFormatter = function (formatter, delimiter) {\n\t    var owner = this;\n\n\t    owner.delimiter = (delimiter || delimiter === '') ? delimiter : ' ';\n\t    owner.delimiterRE = delimiter ? new RegExp('\\\\' + delimiter, 'g') : '';\n\n\t    owner.formatter = formatter;\n\t};\n\n\tPhoneFormatter.prototype = {\n\t    setFormatter: function (formatter) {\n\t        this.formatter = formatter;\n\t    },\n\n\t    format: function (phoneNumber) {\n\t        var owner = this;\n\n\t        owner.formatter.clear();\n\n\t        // only keep number and +\n\t        phoneNumber = phoneNumber.replace(/[^\\d+]/g, '');\n\n\t        // strip delimiter\n\t        phoneNumber = phoneNumber.replace(owner.delimiterRE, '');\n\n\t        var result = '', current, validated = false;\n\n\t        for (var i = 0, iMax = phoneNumber.length; i < iMax; i++) {\n\t            current = owner.formatter.inputDigit(phoneNumber.charAt(i));\n\n\t            // has ()- or space inside\n\t            if (/[\\s()-]/g.test(current)) {\n\t                result = current;\n\n\t                validated = true;\n\t            } else {\n\t                if (!validated) {\n\t                    result = current;\n\t                }\n\t                // else: over length input\n\t                // it turns to invalid number again\n\t            }\n\t        }\n\n\t        // strip ()\n\t        // e.g. US: 7161234567 returns (716) 123-4567\n\t        result = result.replace(/[()]/g, '');\n\t        // replace library delimiter with user customized delimiter\n\t        result = result.replace(/[\\s-]/g, owner.delimiter);\n\n\t        return result;\n\t    }\n\t};\n\n\tmodule.exports = PhoneFormatter;\n\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\tvar CreditCardDetector = {\n\t    blocks: {\n\t        uatp:          [4, 5, 6],\n\t        amex:          [4, 6, 5],\n\t        diners:        [4, 6, 4],\n\t        discover:      [4, 4, 4, 4],\n\t        mastercard:    [4, 4, 4, 4],\n\t        dankort:       [4, 4, 4, 4],\n\t        instapayment:  [4, 4, 4, 4],\n\t        jcb:           [4, 4, 4, 4],\n\t        maestro:       [4, 4, 4, 4],\n\t        visa:          [4, 4, 4, 4],\n\t        mir:           [4, 4, 4, 4],\n\t        general:       [4, 4, 4, 4],\n\t        unionPay:      [4, 4, 4, 4],\n\t        generalStrict: [4, 4, 4, 7]\n\t    },\n\n\t    re: {\n\t        // starts with 1; 15 digits, not starts with 1800 (jcb card)\n\t        uatp: /^(?!1800)1\\d{0,14}/,\n\n\t        // starts with 34/37; 15 digits\n\t        amex: /^3[47]\\d{0,13}/,\n\n\t        // starts with 6011/65/644-649; 16 digits\n\t        discover: /^(?:6011|65\\d{0,2}|64[4-9]\\d?)\\d{0,12}/,\n\n\t        // starts with 300-305/309 or 36/38/39; 14 digits\n\t        diners: /^3(?:0([0-5]|9)|[689]\\d?)\\d{0,11}/,\n\n\t        // starts with 51-55/2221–2720; 16 digits\n\t        mastercard: /^(5[1-5]\\d{0,2}|22[2-9]\\d{0,1}|2[3-7]\\d{0,2})\\d{0,12}/,\n\n\t        // starts with 5019/4175/4571; 16 digits\n\t        dankort: /^(5019|4175|4571)\\d{0,12}/,\n\n\t        // starts with 637-639; 16 digits\n\t        instapayment: /^63[7-9]\\d{0,13}/,\n\n\t        // starts with 2131/1800/35; 16 digits\n\t        jcb: /^(?:2131|1800|35\\d{0,2})\\d{0,12}/,\n\n\t        // starts with 50/56-58/6304/67; 16 digits\n\t        maestro: /^(?:5[0678]\\d{0,2}|6304|67\\d{0,2})\\d{0,12}/,\n\t        \n\t        // starts with 22; 16 digits\n\t        mir: /^220[0-4]\\d{0,12}/,\n\n\t        // starts with 4; 16 digits\n\t        visa: /^4\\d{0,15}/,\n\n\t        // starts with 62; 16 digits\n\t        unionPay: /^62\\d{0,14}/\n\t    },\n\n\t    getInfo: function (value, strictMode) {\n\t        var blocks = CreditCardDetector.blocks,\n\t            re = CreditCardDetector.re;\n\n\t        // In theory, visa credit card can have up to 19 digits number.\n\t        // Set strictMode to true will remove the 16 max-length restrain,\n\t        // however, I never found any website validate card number like\n\t        // this, hence probably you don't need to enable this option.\n\t        strictMode = !!strictMode;\n\n\t        for (var key in re) {\n\t            if (re[key].test(value)) {\n\t                var block;\n\t                if (\n\t                    key === 'discover' ||\n\t                    key === 'maestro' ||\n\t                    key === 'visa' ||\n\t                    key === 'mir' ||\n\t                    key === 'unionPay'\n\t                ) {\n\t                    block = strictMode ? blocks.generalStrict : blocks[key];\n\t                } else {\n\t                    block = blocks[key];\n\t                }\n\t                return {\n\t                    type: key,\n\t                    blocks: block\n\t                };\n\t            }\n\t        }\n\n\t        return {\n\t            type:   'unknown',\n\t            blocks: strictMode ? blocks.generalStrict : blocks.general\n\t        };\n\t    }\n\t};\n\n\tmodule.exports = CreditCardDetector;\n\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\tvar Util = {\n\t    noop: function () {\n\t    },\n\n\t    strip: function (value, re) {\n\t        return value.replace(re, '');\n\t    },\n\n\t    isDelimiter: function (letter, delimiter, delimiters) {\n\t        // single delimiter\n\t        if (delimiters.length === 0) {\n\t            return letter === delimiter;\n\t        }\n\n\t        // multiple delimiters\n\t        return delimiters.some(function (current) {\n\t            if (letter === current) {\n\t                return true;\n\t            }\n\t        });\n\t    },\n\n\t    getDelimiterREByDelimiter: function (delimiter) {\n\t        return new RegExp(delimiter.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1'), 'g');\n\t    },\n\n\t    stripDelimiters: function (value, delimiter, delimiters) {\n\t        var owner = this;\n\n\t        // single delimiter\n\t        if (delimiters.length === 0) {\n\t            var delimiterRE = delimiter ? owner.getDelimiterREByDelimiter(delimiter) : '';\n\n\t            return value.replace(delimiterRE, '');\n\t        }\n\n\t        // multiple delimiters\n\t        delimiters.forEach(function (current) {\n\t            value = value.replace(owner.getDelimiterREByDelimiter(current), '');\n\t        });\n\n\t        return value;\n\t    },\n\n\t    headStr: function (str, length) {\n\t        return str.slice(0, length);\n\t    },\n\n\t    getMaxLength: function (blocks) {\n\t        return blocks.reduce(function (previous, current) {\n\t            return previous + current;\n\t        }, 0);\n\t    },\n\n\t    // strip value by prefix length\n\t    // for prefix: PRE\n\t    // (PRE123, 3) -> 123\n\t    // (PR123, 3) -> 23 this happens when user hits backspace in front of \"PRE\"\n\t    getPrefixStrippedValue: function (value, prefix, prefixLength) {\n\t        if (value.slice(0, prefixLength) !== prefix) {\n\t            var diffIndex = this.getFirstDiffIndex(prefix, value.slice(0, prefixLength));\n\n\t            value = prefix + value.slice(diffIndex, diffIndex + 1) + value.slice(prefixLength + 1);\n\t        }\n\n\t        return value.slice(prefixLength);\n\t    },\n\n\t    getFirstDiffIndex: function (prev, current) {\n\t        var index = 0;\n\n\t        while (prev.charAt(index) === current.charAt(index)) {\n\t            if (prev.charAt(index++) === '') {\n\t                return -1;\n\t            }\n\t        }\n\n\t        return index;\n\t    },\n\n\t    getFormattedValue: function (value, blocks, blocksLength, delimiter, delimiters, delimiterLazyShow) {\n\t        var result = '',\n\t            multipleDelimiters = delimiters.length > 0,\n\t            currentDelimiter;\n\n\t        // no options, normal input\n\t        if (blocksLength === 0) {\n\t            return value;\n\t        }\n\n\t        blocks.forEach(function (length, index) {\n\t            if (value.length > 0) {\n\t                var sub = value.slice(0, length),\n\t                    rest = value.slice(length);\n\n\t                if (multipleDelimiters) {\n\t                    currentDelimiter = delimiters[delimiterLazyShow ? (index - 1) : index] || currentDelimiter;\n\t                } else {\n\t                    currentDelimiter = delimiter;\n\t                }\n\n\t                if (delimiterLazyShow) {\n\t                    if (index > 0) {\n\t                        result += currentDelimiter;\n\t                    }\n\n\t                    result += sub;\n\t                } else {\n\t                    result += sub;\n\n\t                    if (sub.length === length && index < blocksLength - 1) {\n\t                        result += currentDelimiter;\n\t                    }\n\t                }\n\n\t                // update remaining string\n\t                value = rest;\n\t            }\n\t        });\n\n\t        return result;\n\t    },\n\n\t    isAndroid: function () {\n\t        return navigator && /android/i.test(navigator.userAgent);\n\t    },\n\n\t    // On Android chrome, the keyup and keydown events\n\t    // always return key code 229 as a composition that\n\t    // buffers the user’s keystrokes\n\t    // see https://github.com/nosir/cleave.js/issues/147\n\t    isAndroidBackspaceKeydown: function (lastInputValue, currentInputValue) {\n\t        if (!this.isAndroid() || !lastInputValue || !currentInputValue) {\n\t            return false;\n\t        }\n\n\t        return currentInputValue === lastInputValue.slice(0, -1);\n\t    }\n\t};\n\n\tmodule.exports = Util;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\n\t/**\n\t * Props Assignment\n\t *\n\t * Separate this, so react module can share the usage\n\t */\n\tvar DefaultProperties = {\n\t    // Maybe change to object-assign\n\t    // for now just keep it as simple\n\t    assign: function (target, opts) {\n\t        target = target || {};\n\t        opts = opts || {};\n\n\t        // credit card\n\t        target.creditCard = !!opts.creditCard;\n\t        target.creditCardStrictMode = !!opts.creditCardStrictMode;\n\t        target.creditCardType = '';\n\t        target.onCreditCardTypeChanged = opts.onCreditCardTypeChanged || (function () {});\n\n\t        // phone\n\t        target.phone = !!opts.phone;\n\t        target.phoneRegionCode = opts.phoneRegionCode || 'AU';\n\t        target.phoneFormatter = {};\n\n\t        // date\n\t        target.date = !!opts.date;\n\t        target.datePattern = opts.datePattern || ['d', 'm', 'Y'];\n\t        target.dateFormatter = {};\n\n\t        // numeral\n\t        target.numeral = !!opts.numeral;\n\t        target.numeralIntegerScale = opts.numeralIntegerScale > 0 ? opts.numeralIntegerScale : 0;\n\t        target.numeralDecimalScale = opts.numeralDecimalScale >= 0 ? opts.numeralDecimalScale : 2;\n\t        target.numeralDecimalMark = opts.numeralDecimalMark || '.';\n\t        target.numeralThousandsGroupStyle = opts.numeralThousandsGroupStyle || 'thousand';\n\t        target.numeralPositiveOnly = !!opts.numeralPositiveOnly;\n\t        target.stripLeadingZeroes = opts.stripLeadingZeroes !== false;\n\n\t        // others\n\t        target.numericOnly = target.creditCard || target.date || !!opts.numericOnly;\n\n\t        target.uppercase = !!opts.uppercase;\n\t        target.lowercase = !!opts.lowercase;\n\n\t        target.prefix = (target.creditCard || target.date) ? '' : (opts.prefix || '');\n\t        target.noImmediatePrefix = !!opts.noImmediatePrefix;\n\t        target.prefixLength = target.prefix.length;\n\t        target.rawValueTrimPrefix = !!opts.rawValueTrimPrefix;\n\t        target.copyDelimiter = !!opts.copyDelimiter;\n\n\t        target.initValue = (opts.initValue !== undefined && opts.initValue !== null) ? opts.initValue.toString() : '';\n\n\t        target.delimiter =\n\t            (opts.delimiter || opts.delimiter === '') ? opts.delimiter :\n\t                (opts.date ? '/' :\n\t                    (opts.numeral ? ',' :\n\t                        (opts.phone ? ' ' :\n\t                            ' ')));\n\t        target.delimiterLength = target.delimiter.length;\n\t        target.delimiterLazyShow = !!opts.delimiterLazyShow;\n\t        target.delimiters = opts.delimiters || [];\n\n\t        target.blocks = opts.blocks || [];\n\t        target.blocksLength = target.blocks.length;\n\n\t        target.root = (typeof global === 'object' && global) ? global : window;\n\n\t        target.maxLength = 0;\n\n\t        target.backspace = false;\n\t        target.result = '';\n\n\t        return target;\n\t    }\n\t};\n\n\tmodule.exports = DefaultProperties;\n\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ })\n/******/ ])\n});\n;\n\n/***/ }),\n\n/***/ 827:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('b-field', [_c('b-input', {\n    directives: [{\n      name: \"cleave\",\n      rawName: \"v-cleave\",\n      value: (_vm.masks.creditCard),\n      expression: \"masks.creditCard\"\n    }],\n    attrs: {\n      \"placeholder\": \"Credit Card\"\n    }\n  })], 1), _vm._v(\" \"), _c('b-field', [_c('b-input', {\n    directives: [{\n      name: \"cleave\",\n      rawName: \"v-cleave\",\n      value: (_vm.masks.numeral),\n      expression: \"masks.numeral\"\n    }],\n    attrs: {\n      \"placeholder\": \"Numeral\"\n    }\n  })], 1), _vm._v(\" \"), _c('b-field', {\n    attrs: {\n      \"addons\": false\n    }\n  }, [_c('b-input', {\n    directives: [{\n      name: \"cleave\",\n      rawName: \"v-cleave\",\n      value: (_vm.masks.custom),\n      expression: \"masks.custom\"\n    }],\n    attrs: {\n      \"placeholder\": \"Custom\"\n    },\n    nativeOn: {\n      \"input\": function($event) {\n        _vm.getRawValue($event)\n      }\n    },\n    model: {\n      value: (_vm.value),\n      callback: function($$v) {\n        _vm.value = $$v\n      },\n      expression: \"value\"\n    }\n  }), _vm._v(\" \"), _c('p', [_c('b', [_vm._v(\"Formatted value (v-model)\")]), _vm._v(\": \" + _vm._s(_vm.value))]), _vm._v(\" \"), _c('p', [_c('b', [_vm._v(\"Raw value\")]), _vm._v(\": \" + _vm._s(_vm.rawValue))])], 1)], 1)\n},staticRenderFns: []}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/34.535257ed8a6d9c9ea87c.js","var Component = require(\"!../../../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ExFormat.vue\"),\n  /* template */\n  require(\"!!../../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-62f8b29c\\\",\\\"hasScoped\\\":false}!../../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./ExFormat.vue\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/pages/extensions/cleavejs/examples/ExFormat.vue\n// module id = 227\n// module chunks = 27 34","<template>\n    <section>\n        <b-field>\n            <b-input\n                placeholder=\"Credit Card\"\n                v-cleave=\"masks.creditCard\">\n            </b-input>\n        </b-field>\n\n        <b-field>\n            <b-input\n                placeholder=\"Numeral\"\n                v-cleave=\"masks.numeral\">\n            </b-input>\n        </b-field>\n\n        <b-field :addons=\"false\">\n            <b-input\n                placeholder=\"Custom\"\n                v-model=\"value\"\n                v-cleave=\"masks.custom\"\n                @input.native=\"getRawValue\">\n            </b-input>\n            <p><b>Formatted value (v-model)</b>: {{ value }}</p>\n            <p><b>Raw value</b>: {{ rawValue }}</p>\n        </b-field>\n    </section>\n</template>\n\n<script>\n    // You have to install cleave.js to use it:\n    // 'npm install cleave.js'\n    import Cleave from 'cleave.js'\n\n    /**\n     * We add a new instance of Cleave when the element\n     * is bound or updated, and destroy it when it's unbound.\n     */\n    const cleave = {\n        name: 'cleave',\n        bind(el, binding) {\n            const input = el.querySelector('input')\n            input._vCleave = new Cleave(input, binding.value)\n        },\n        update(el, binding) {\n            const input = el.querySelector('input')\n            input._vCleave.destroy()\n            input._vCleave = new Cleave(input, binding.value)\n        },\n        unbind(el) {\n            const input = el.querySelector('input')\n            input._vCleave.destroy()\n        }\n    }\n\n    export default {\n        directives: { cleave },\n        data() {\n            return {\n                value: '',\n                rawValue: '',\n                masks: {\n                    creditCard: { creditCard: true },\n                    numeral: {\n                        numeral: true,\n                        numeralThousandsGroupStyle: 'thousand',\n                        prefix: '$ '\n                    },\n                    custom: {\n                        delimiters: ['.', '.', '-'],\n                        blocks: [3, 3, 3, 2],\n                        numericOnly: true\n                    }\n                }\n            }\n        },\n        methods: {\n            getRawValue(event) {\n                this.rawValue = event.target._vCleave.getRawValue()\n            }\n        }\n    }\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ExFormat.vue?f71eb308","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Cleave\"] = factory();\n\telse\n\t\troot[\"Cleave\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\n\t/**\n\t * Construct a new Cleave instance by passing the configuration object\n\t *\n\t * @param {String | HTMLElement} element\n\t * @param {Object} opts\n\t */\n\tvar Cleave = function (element, opts) {\n\t    var owner = this;\n\n\t    if (typeof element === 'string') {\n\t        owner.element = document.querySelector(element);\n\t    } else {\n\t        owner.element = ((typeof element.length !== 'undefined') && element.length > 0) ? element[0] : element;\n\t    }\n\n\t    if (!owner.element) {\n\t        throw new Error('[cleave.js] Please check the element');\n\t    }\n\n\t    opts.initValue = owner.element.value;\n\n\t    owner.properties = Cleave.DefaultProperties.assign({}, opts);\n\n\t    owner.init();\n\t};\n\n\tCleave.prototype = {\n\t    init: function () {\n\t        var owner = this, pps = owner.properties;\n\n\t        // no need to use this lib\n\t        if (!pps.numeral && !pps.phone && !pps.creditCard && !pps.date && (pps.blocksLength === 0 && !pps.prefix)) {\n\t            owner.onInput(pps.initValue);\n\n\t            return;\n\t        }\n\n\t        pps.maxLength = Cleave.Util.getMaxLength(pps.blocks);\n\n\t        owner.isAndroid = Cleave.Util.isAndroid();\n\t        owner.lastInputValue = '';\n\n\t        owner.onChangeListener = owner.onChange.bind(owner);\n\t        owner.onKeyDownListener = owner.onKeyDown.bind(owner);\n\t        owner.onCutListener = owner.onCut.bind(owner);\n\t        owner.onCopyListener = owner.onCopy.bind(owner);\n\n\t        owner.element.addEventListener('input', owner.onChangeListener);\n\t        owner.element.addEventListener('keydown', owner.onKeyDownListener);\n\t        owner.element.addEventListener('cut', owner.onCutListener);\n\t        owner.element.addEventListener('copy', owner.onCopyListener);\n\n\n\t        owner.initPhoneFormatter();\n\t        owner.initDateFormatter();\n\t        owner.initNumeralFormatter();\n\n\t        // avoid touch input field if value is null\n\t        // otherwise Firefox will add red box-shadow for <input required />\n\t        if (pps.initValue || (pps.prefix && !pps.noImmediatePrefix)) {\n\t            owner.onInput(pps.initValue);\n\t        }\n\t    },\n\n\t    initNumeralFormatter: function () {\n\t        var owner = this, pps = owner.properties;\n\n\t        if (!pps.numeral) {\n\t            return;\n\t        }\n\n\t        pps.numeralFormatter = new Cleave.NumeralFormatter(\n\t            pps.numeralDecimalMark,\n\t            pps.numeralIntegerScale,\n\t            pps.numeralDecimalScale,\n\t            pps.numeralThousandsGroupStyle,\n\t            pps.numeralPositiveOnly,\n\t            pps.stripLeadingZeroes,\n\t            pps.delimiter\n\t        );\n\t    },\n\n\t    initDateFormatter: function () {\n\t        var owner = this, pps = owner.properties;\n\n\t        if (!pps.date) {\n\t            return;\n\t        }\n\n\t        pps.dateFormatter = new Cleave.DateFormatter(pps.datePattern);\n\t        pps.blocks = pps.dateFormatter.getBlocks();\n\t        pps.blocksLength = pps.blocks.length;\n\t        pps.maxLength = Cleave.Util.getMaxLength(pps.blocks);\n\t    },\n\n\t    initPhoneFormatter: function () {\n\t        var owner = this, pps = owner.properties;\n\n\t        if (!pps.phone) {\n\t            return;\n\t        }\n\n\t        // Cleave.AsYouTypeFormatter should be provided by\n\t        // external google closure lib\n\t        try {\n\t            pps.phoneFormatter = new Cleave.PhoneFormatter(\n\t                new pps.root.Cleave.AsYouTypeFormatter(pps.phoneRegionCode),\n\t                pps.delimiter\n\t            );\n\t        } catch (ex) {\n\t            throw new Error('[cleave.js] Please include phone-type-formatter.{country}.js lib');\n\t        }\n\t    },\n\n\t    onKeyDown: function (event) {\n\t        var owner = this, pps = owner.properties,\n\t            charCode = event.which || event.keyCode,\n\t            Util = Cleave.Util,\n\t            currentValue = owner.element.value;\n\n\t        if (Util.isAndroidBackspaceKeydown(owner.lastInputValue, currentValue)) {\n\t            charCode = 8;\n\t        }\n\n\t        owner.lastInputValue = currentValue;\n\n\t        // hit backspace when last character is delimiter\n\t        if (charCode === 8 && Util.isDelimiter(currentValue.slice(-pps.delimiterLength), pps.delimiter, pps.delimiters)) {\n\t            pps.backspace = true;\n\n\t            return;\n\t        }\n\n\t        pps.backspace = false;\n\t    },\n\n\t    onChange: function () {\n\t        this.onInput(this.element.value);\n\t    },\n\n\t    onCut: function (e) {\n\t        this.copyClipboardData(e);\n\t        this.onInput('');\n\t    },\n\n\t    onCopy: function (e) {\n\t        this.copyClipboardData(e);\n\t    },\n\n\t    copyClipboardData: function (e) {\n\t        var owner = this,\n\t            pps = owner.properties,\n\t            Util = Cleave.Util,\n\t            inputValue = owner.element.value,\n\t            textToCopy = '';\n\n\t        if (!pps.copyDelimiter) {\n\t            textToCopy = Util.stripDelimiters(inputValue, pps.delimiter, pps.delimiters);\n\t        } else {\n\t            textToCopy = inputValue;\n\t        }\n\n\t        try {\n\t            if (e.clipboardData) {\n\t                e.clipboardData.setData('Text', textToCopy);\n\t            } else {\n\t                window.clipboardData.setData('Text', textToCopy);\n\t            }\n\n\t            e.preventDefault();\n\t        } catch (ex) {\n\t            //  empty\n\t        }\n\t    },\n\n\t    onInput: function (value) {\n\t        var owner = this, pps = owner.properties,\n\t            Util = Cleave.Util;\n\n\t        // case 1: delete one more character \"4\"\n\t        // 1234*| -> hit backspace -> 123|\n\t        // case 2: last character is not delimiter which is:\n\t        // 12|34* -> hit backspace -> 1|34*\n\t        // note: no need to apply this for numeral mode\n\t        if (!pps.numeral && pps.backspace && !Util.isDelimiter(value.slice(-pps.delimiterLength), pps.delimiter, pps.delimiters)) {\n\t            value = Util.headStr(value, value.length - pps.delimiterLength);\n\t        }\n\n\t        // phone formatter\n\t        if (pps.phone) {\n\t            if (pps.prefix && (!pps.noImmediatePrefix || value.length)) {\n\t                pps.result = pps.prefix + pps.phoneFormatter.format(value).slice(pps.prefix.length);\n\t            } else {\n\t                pps.result = pps.phoneFormatter.format(value);\n\t            }\n\t            owner.updateValueState();\n\n\t            return;\n\t        }\n\n\t        // numeral formatter\n\t        if (pps.numeral) {\n\t            if (pps.prefix && (!pps.noImmediatePrefix || value.length)) {\n\t                pps.result = pps.prefix + pps.numeralFormatter.format(value);\n\t            } else {\n\t                pps.result = pps.numeralFormatter.format(value);\n\t            }\n\t            owner.updateValueState();\n\n\t            return;\n\t        }\n\n\t        // date\n\t        if (pps.date) {\n\t            value = pps.dateFormatter.getValidatedDate(value);\n\t        }\n\n\t        // strip delimiters\n\t        value = Util.stripDelimiters(value, pps.delimiter, pps.delimiters);\n\n\t        // strip prefix\n\t        value = Util.getPrefixStrippedValue(value, pps.prefix, pps.prefixLength);\n\n\t        // strip non-numeric characters\n\t        value = pps.numericOnly ? Util.strip(value, /[^\\d]/g) : value;\n\n\t        // convert case\n\t        value = pps.uppercase ? value.toUpperCase() : value;\n\t        value = pps.lowercase ? value.toLowerCase() : value;\n\n\t        // prefix\n\t        if (pps.prefix && (!pps.noImmediatePrefix || value.length)) {\n\t            value = pps.prefix + value;\n\n\t            // no blocks specified, no need to do formatting\n\t            if (pps.blocksLength === 0) {\n\t                pps.result = value;\n\t                owner.updateValueState();\n\n\t                return;\n\t            }\n\t        }\n\n\t        // update credit card props\n\t        if (pps.creditCard) {\n\t            owner.updateCreditCardPropsByValue(value);\n\t        }\n\n\t        // strip over length characters\n\t        value = Util.headStr(value, pps.maxLength);\n\n\t        // apply blocks\n\t        pps.result = Util.getFormattedValue(\n\t            value,\n\t            pps.blocks, pps.blocksLength,\n\t            pps.delimiter, pps.delimiters, pps.delimiterLazyShow\n\t        );\n\n\t        owner.updateValueState();\n\t    },\n\n\t    updateCreditCardPropsByValue: function (value) {\n\t        var owner = this, pps = owner.properties,\n\t            Util = Cleave.Util,\n\t            creditCardInfo;\n\n\t        // At least one of the first 4 characters has changed\n\t        if (Util.headStr(pps.result, 4) === Util.headStr(value, 4)) {\n\t            return;\n\t        }\n\n\t        creditCardInfo = Cleave.CreditCardDetector.getInfo(value, pps.creditCardStrictMode);\n\n\t        pps.blocks = creditCardInfo.blocks;\n\t        pps.blocksLength = pps.blocks.length;\n\t        pps.maxLength = Util.getMaxLength(pps.blocks);\n\n\t        // credit card type changed\n\t        if (pps.creditCardType !== creditCardInfo.type) {\n\t            pps.creditCardType = creditCardInfo.type;\n\n\t            pps.onCreditCardTypeChanged.call(owner, pps.creditCardType);\n\t        }\n\t    },\n\n\t    setCurrentSelection: function (endPos, oldValue) {\n\t        var elem = this.element;\n\n\t        // If cursor was at the end of value, just place it back.\n\t        // Because new value could contain additional chars.\n\t        if (oldValue.length !== endPos && elem === document.activeElement) {\n\t          if ( elem.createTextRange ) {\n\t            var range = elem.createTextRange();\n\n\t            range.move('character', endPos);\n\t            range.select();\n\t          } else {\n\t            elem.setSelectionRange(endPos, endPos);\n\t          }\n\t        }\n\t    },\n\n\t    updateValueState: function () {\n\t        var owner = this;\n\n\t        if (!owner.element) {\n\t            return;\n\t        }\n\n\t        var endPos = owner.element.selectionEnd;\n\t        var oldValue = owner.element.value;\n\n\t        // fix Android browser type=\"text\" input field\n\t        // cursor not jumping issue\n\t        if (owner.isAndroid) {\n\t            window.setTimeout(function () {\n\t                owner.element.value = owner.properties.result;\n\t                owner.setCurrentSelection(endPos, oldValue);\n\t            }, 1);\n\n\t            return;\n\t        }\n\n\t        owner.element.value = owner.properties.result;\n\t        owner.setCurrentSelection(endPos, oldValue);\n\t    },\n\n\t    setPhoneRegionCode: function (phoneRegionCode) {\n\t        var owner = this, pps = owner.properties;\n\n\t        pps.phoneRegionCode = phoneRegionCode;\n\t        owner.initPhoneFormatter();\n\t        owner.onChange();\n\t    },\n\n\t    setRawValue: function (value) {\n\t        var owner = this, pps = owner.properties;\n\n\t        value = value !== undefined && value !== null ? value.toString() : '';\n\n\t        if (pps.numeral) {\n\t            value = value.replace('.', pps.numeralDecimalMark);\n\t        }\n\n\t        pps.backspace = false;\n\t        \n\t        owner.element.value = value;\n\t        owner.onInput(value);\n\t    },\n\n\t    getRawValue: function () {\n\t        var owner = this,\n\t            pps = owner.properties,\n\t            Util = Cleave.Util,\n\t            rawValue = owner.element.value;\n\n\t        if (pps.rawValueTrimPrefix) {\n\t            rawValue = Util.getPrefixStrippedValue(rawValue, pps.prefix, pps.prefixLength);\n\t        }\n\n\t        if (pps.numeral) {\n\t            rawValue = pps.numeralFormatter.getRawValue(rawValue);\n\t        } else {\n\t            rawValue = Util.stripDelimiters(rawValue, pps.delimiter, pps.delimiters);\n\t        }\n\n\t        return rawValue;\n\t    },\n\n\t    getISOFormatDate: function () {\n\t        var owner = this,\n\t            pps = owner.properties;\n\n\t        return pps.date ? pps.dateFormatter.getISOFormatDate() : '';\n\t    },\n\n\t    getFormattedValue: function () {\n\t        return this.element.value;\n\t    },\n\n\t    destroy: function () {\n\t        var owner = this;\n\n\t        owner.element.removeEventListener('input', owner.onChangeListener);\n\t        owner.element.removeEventListener('keydown', owner.onKeyDownListener);\n\t        owner.element.removeEventListener('cut', owner.onCutListener);\n\t        owner.element.removeEventListener('copy', owner.onCopyListener);\n\t    },\n\n\t    toString: function () {\n\t        return '[Cleave Object]';\n\t    }\n\t};\n\n\tCleave.NumeralFormatter = __webpack_require__(1);\n\tCleave.DateFormatter = __webpack_require__(2);\n\tCleave.PhoneFormatter = __webpack_require__(3);\n\tCleave.CreditCardDetector = __webpack_require__(4);\n\tCleave.Util = __webpack_require__(5);\n\tCleave.DefaultProperties = __webpack_require__(6);\n\n\t// for angular directive\n\t((typeof global === 'object' && global) ? global : window)['Cleave'] = Cleave;\n\n\t// CommonJS\n\tmodule.exports = Cleave;\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\tvar NumeralFormatter = function (numeralDecimalMark,\n\t                                 numeralIntegerScale,\n\t                                 numeralDecimalScale,\n\t                                 numeralThousandsGroupStyle,\n\t                                 numeralPositiveOnly,\n\t                                 stripLeadingZeroes,\n\t                                 delimiter) {\n\t    var owner = this;\n\n\t    owner.numeralDecimalMark = numeralDecimalMark || '.';\n\t    owner.numeralIntegerScale = numeralIntegerScale > 0 ? numeralIntegerScale : 0;\n\t    owner.numeralDecimalScale = numeralDecimalScale >= 0 ? numeralDecimalScale : 2;\n\t    owner.numeralThousandsGroupStyle = numeralThousandsGroupStyle || NumeralFormatter.groupStyle.thousand;\n\t    owner.numeralPositiveOnly = !!numeralPositiveOnly;\n\t    owner.stripLeadingZeroes = stripLeadingZeroes !== false;\n\t    owner.delimiter = (delimiter || delimiter === '') ? delimiter : ',';\n\t    owner.delimiterRE = delimiter ? new RegExp('\\\\' + delimiter, 'g') : '';\n\t};\n\n\tNumeralFormatter.groupStyle = {\n\t    thousand: 'thousand',\n\t    lakh:     'lakh',\n\t    wan:      'wan',\n\t    none:     'none'    \n\t};\n\n\tNumeralFormatter.prototype = {\n\t    getRawValue: function (value) {\n\t        return value.replace(this.delimiterRE, '').replace(this.numeralDecimalMark, '.');\n\t    },\n\n\t    format: function (value) {\n\t        var owner = this, parts, partInteger, partDecimal = '';\n\n\t        // strip alphabet letters\n\t        value = value.replace(/[A-Za-z]/g, '')\n\t            // replace the first decimal mark with reserved placeholder\n\t            .replace(owner.numeralDecimalMark, 'M')\n\n\t            // strip non numeric letters except minus and \"M\"\n\t            // this is to ensure prefix has been stripped\n\t            .replace(/[^\\dM-]/g, '')\n\n\t            // replace the leading minus with reserved placeholder\n\t            .replace(/^\\-/, 'N')\n\n\t            // strip the other minus sign (if present)\n\t            .replace(/\\-/g, '')\n\n\t            // replace the minus sign (if present)\n\t            .replace('N', owner.numeralPositiveOnly ? '' : '-')\n\n\t            // replace decimal mark\n\t            .replace('M', owner.numeralDecimalMark);\n\n\t        // strip any leading zeros\n\t        if (owner.stripLeadingZeroes) {\n\t            value = value.replace(/^(-)?0+(?=\\d)/, '$1');\n\t        }\n\n\t        partInteger = value;\n\n\t        if (value.indexOf(owner.numeralDecimalMark) >= 0) {\n\t            parts = value.split(owner.numeralDecimalMark);\n\t            partInteger = parts[0];\n\t            partDecimal = owner.numeralDecimalMark + parts[1].slice(0, owner.numeralDecimalScale);\n\t        }\n\n\t        if (owner.numeralIntegerScale > 0) {\n\t          partInteger = partInteger.slice(0, owner.numeralIntegerScale + (value.slice(0, 1) === '-' ? 1 : 0));\n\t        }\n\n\t        switch (owner.numeralThousandsGroupStyle) {\n\t        case NumeralFormatter.groupStyle.lakh:\n\t            partInteger = partInteger.replace(/(\\d)(?=(\\d\\d)+\\d$)/g, '$1' + owner.delimiter);\n\n\t            break;\n\n\t        case NumeralFormatter.groupStyle.wan:\n\t            partInteger = partInteger.replace(/(\\d)(?=(\\d{4})+$)/g, '$1' + owner.delimiter);\n\n\t            break;\n\n\t        case NumeralFormatter.groupStyle.thousand:\n\t            partInteger = partInteger.replace(/(\\d)(?=(\\d{3})+$)/g, '$1' + owner.delimiter);\n\n\t            break;\n\t        }\n\n\t        return partInteger.toString() + (owner.numeralDecimalScale > 0 ? partDecimal.toString() : '');\n\t    }\n\t};\n\n\tmodule.exports = NumeralFormatter;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\tvar DateFormatter = function (datePattern) {\n\t    var owner = this;\n\n\t    owner.date = [];\n\t    owner.blocks = [];\n\t    owner.datePattern = datePattern;\n\t    owner.initBlocks();\n\t};\n\n\tDateFormatter.prototype = {\n\t    initBlocks: function () {\n\t        var owner = this;\n\t        owner.datePattern.forEach(function (value) {\n\t            if (value === 'Y') {\n\t                owner.blocks.push(4);\n\t            } else {\n\t                owner.blocks.push(2);\n\t            }\n\t        });\n\t    },\n\n\t    getISOFormatDate: function () {\n\t        var owner = this,\n\t            date = owner.date;\n\n\t        return date[2] ? (\n\t            date[2] + '-' + owner.addLeadingZero(date[1]) + '-' + owner.addLeadingZero(date[0])\n\t        ) : '';\n\t    },\n\n\t    getBlocks: function () {\n\t        return this.blocks;\n\t    },\n\n\t    getValidatedDate: function (value) {\n\t        var owner = this, result = '';\n\n\t        value = value.replace(/[^\\d]/g, '');\n\n\t        owner.blocks.forEach(function (length, index) {\n\t            if (value.length > 0) {\n\t                var sub = value.slice(0, length),\n\t                    sub0 = sub.slice(0, 1),\n\t                    rest = value.slice(length);\n\n\t                switch (owner.datePattern[index]) {\n\t                case 'd':\n\t                    if (sub === '00') {\n\t                        sub = '01';\n\t                    } else if (parseInt(sub0, 10) > 3) {\n\t                        sub = '0' + sub0;\n\t                    } else if (parseInt(sub, 10) > 31) {\n\t                        sub = '31';\n\t                    }\n\n\t                    break;\n\n\t                case 'm':\n\t                    if (sub === '00') {\n\t                        sub = '01';\n\t                    } else if (parseInt(sub0, 10) > 1) {\n\t                        sub = '0' + sub0;\n\t                    } else if (parseInt(sub, 10) > 12) {\n\t                        sub = '12';\n\t                    }\n\n\t                    break;\n\t                }\n\n\t                result += sub;\n\n\t                // update remaining string\n\t                value = rest;\n\t            }\n\t        });\n\n\t        return this.getFixedDateString(result);\n\t    },\n\n\t    getFixedDateString: function (value) {\n\t        var owner = this, datePattern = owner.datePattern, date = [],\n\t            dayIndex = 0, monthIndex = 0, yearIndex = 0,\n\t            dayStartIndex = 0, monthStartIndex = 0, yearStartIndex = 0,\n\t            day, month, year;\n\n\t        // mm-dd || dd-mm\n\t        if (value.length === 4 && datePattern[0].toLowerCase() !== 'y' && datePattern[1].toLowerCase() !== 'y') {\n\t            dayStartIndex = datePattern[0] === 'd' ? 0 : 2;\n\t            monthStartIndex = 2 - dayStartIndex;\n\t            day = parseInt(value.slice(dayStartIndex, dayStartIndex + 2), 10);\n\t            month = parseInt(value.slice(monthStartIndex, monthStartIndex + 2), 10);\n\n\t            date = this.getFixedDate(day, month, 0);\n\t        }\n\n\t        // yyyy-mm-dd || yyyy-dd-mm || mm-dd-yyyy || dd-mm-yyyy || dd-yyyy-mm || mm-yyyy-dd\n\t        if (value.length === 8) {\n\t            datePattern.forEach(function (type, index) {\n\t                switch (type) {\n\t                case 'd':\n\t                    dayIndex = index;\n\t                    break;\n\t                case 'm':\n\t                    monthIndex = index;\n\t                    break;\n\t                default:\n\t                    yearIndex = index;\n\t                    break;\n\t                }\n\t            });\n\n\t            yearStartIndex = yearIndex * 2;\n\t            dayStartIndex = (dayIndex <= yearIndex) ? dayIndex * 2 : (dayIndex * 2 + 2);\n\t            monthStartIndex = (monthIndex <= yearIndex) ? monthIndex * 2 : (monthIndex * 2 + 2);\n\n\t            day = parseInt(value.slice(dayStartIndex, dayStartIndex + 2), 10);\n\t            month = parseInt(value.slice(monthStartIndex, monthStartIndex + 2), 10);\n\t            year = parseInt(value.slice(yearStartIndex, yearStartIndex + 4), 10);\n\n\t            date = this.getFixedDate(day, month, year);\n\t        }\n\n\t        owner.date = date;\n\n\t        return date.length === 0 ? value : datePattern.reduce(function (previous, current) {\n\t            switch (current) {\n\t            case 'd':\n\t                return previous + owner.addLeadingZero(date[0]);\n\t            case 'm':\n\t                return previous + owner.addLeadingZero(date[1]);\n\t            default:\n\t                return previous + '' + (date[2] || '');\n\t            }\n\t        }, '');\n\t    },\n\n\t    getFixedDate: function (day, month, year) {\n\t        day = Math.min(day, 31);\n\t        month = Math.min(month, 12);\n\t        year = parseInt((year || 0), 10);\n\n\t        if ((month < 7 && month % 2 === 0) || (month > 8 && month % 2 === 1)) {\n\t            day = Math.min(day, month === 2 ? (this.isLeapYear(year) ? 29 : 28) : 30);\n\t        }\n\n\t        return [day, month, year];\n\t    },\n\n\t    isLeapYear: function (year) {\n\t        return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\n\t    },\n\n\t    addLeadingZero: function (number) {\n\t        return (number < 10 ? '0' : '') + number;\n\t    }\n\t};\n\n\tmodule.exports = DateFormatter;\n\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\tvar PhoneFormatter = function (formatter, delimiter) {\n\t    var owner = this;\n\n\t    owner.delimiter = (delimiter || delimiter === '') ? delimiter : ' ';\n\t    owner.delimiterRE = delimiter ? new RegExp('\\\\' + delimiter, 'g') : '';\n\n\t    owner.formatter = formatter;\n\t};\n\n\tPhoneFormatter.prototype = {\n\t    setFormatter: function (formatter) {\n\t        this.formatter = formatter;\n\t    },\n\n\t    format: function (phoneNumber) {\n\t        var owner = this;\n\n\t        owner.formatter.clear();\n\n\t        // only keep number and +\n\t        phoneNumber = phoneNumber.replace(/[^\\d+]/g, '');\n\n\t        // strip delimiter\n\t        phoneNumber = phoneNumber.replace(owner.delimiterRE, '');\n\n\t        var result = '', current, validated = false;\n\n\t        for (var i = 0, iMax = phoneNumber.length; i < iMax; i++) {\n\t            current = owner.formatter.inputDigit(phoneNumber.charAt(i));\n\n\t            // has ()- or space inside\n\t            if (/[\\s()-]/g.test(current)) {\n\t                result = current;\n\n\t                validated = true;\n\t            } else {\n\t                if (!validated) {\n\t                    result = current;\n\t                }\n\t                // else: over length input\n\t                // it turns to invalid number again\n\t            }\n\t        }\n\n\t        // strip ()\n\t        // e.g. US: 7161234567 returns (716) 123-4567\n\t        result = result.replace(/[()]/g, '');\n\t        // replace library delimiter with user customized delimiter\n\t        result = result.replace(/[\\s-]/g, owner.delimiter);\n\n\t        return result;\n\t    }\n\t};\n\n\tmodule.exports = PhoneFormatter;\n\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\tvar CreditCardDetector = {\n\t    blocks: {\n\t        uatp:          [4, 5, 6],\n\t        amex:          [4, 6, 5],\n\t        diners:        [4, 6, 4],\n\t        discover:      [4, 4, 4, 4],\n\t        mastercard:    [4, 4, 4, 4],\n\t        dankort:       [4, 4, 4, 4],\n\t        instapayment:  [4, 4, 4, 4],\n\t        jcb:           [4, 4, 4, 4],\n\t        maestro:       [4, 4, 4, 4],\n\t        visa:          [4, 4, 4, 4],\n\t        mir:           [4, 4, 4, 4],\n\t        general:       [4, 4, 4, 4],\n\t        unionPay:      [4, 4, 4, 4],\n\t        generalStrict: [4, 4, 4, 7]\n\t    },\n\n\t    re: {\n\t        // starts with 1; 15 digits, not starts with 1800 (jcb card)\n\t        uatp: /^(?!1800)1\\d{0,14}/,\n\n\t        // starts with 34/37; 15 digits\n\t        amex: /^3[47]\\d{0,13}/,\n\n\t        // starts with 6011/65/644-649; 16 digits\n\t        discover: /^(?:6011|65\\d{0,2}|64[4-9]\\d?)\\d{0,12}/,\n\n\t        // starts with 300-305/309 or 36/38/39; 14 digits\n\t        diners: /^3(?:0([0-5]|9)|[689]\\d?)\\d{0,11}/,\n\n\t        // starts with 51-55/2221–2720; 16 digits\n\t        mastercard: /^(5[1-5]\\d{0,2}|22[2-9]\\d{0,1}|2[3-7]\\d{0,2})\\d{0,12}/,\n\n\t        // starts with 5019/4175/4571; 16 digits\n\t        dankort: /^(5019|4175|4571)\\d{0,12}/,\n\n\t        // starts with 637-639; 16 digits\n\t        instapayment: /^63[7-9]\\d{0,13}/,\n\n\t        // starts with 2131/1800/35; 16 digits\n\t        jcb: /^(?:2131|1800|35\\d{0,2})\\d{0,12}/,\n\n\t        // starts with 50/56-58/6304/67; 16 digits\n\t        maestro: /^(?:5[0678]\\d{0,2}|6304|67\\d{0,2})\\d{0,12}/,\n\t        \n\t        // starts with 22; 16 digits\n\t        mir: /^220[0-4]\\d{0,12}/,\n\n\t        // starts with 4; 16 digits\n\t        visa: /^4\\d{0,15}/,\n\n\t        // starts with 62; 16 digits\n\t        unionPay: /^62\\d{0,14}/\n\t    },\n\n\t    getInfo: function (value, strictMode) {\n\t        var blocks = CreditCardDetector.blocks,\n\t            re = CreditCardDetector.re;\n\n\t        // In theory, visa credit card can have up to 19 digits number.\n\t        // Set strictMode to true will remove the 16 max-length restrain,\n\t        // however, I never found any website validate card number like\n\t        // this, hence probably you don't need to enable this option.\n\t        strictMode = !!strictMode;\n\n\t        for (var key in re) {\n\t            if (re[key].test(value)) {\n\t                var block;\n\t                if (\n\t                    key === 'discover' ||\n\t                    key === 'maestro' ||\n\t                    key === 'visa' ||\n\t                    key === 'mir' ||\n\t                    key === 'unionPay'\n\t                ) {\n\t                    block = strictMode ? blocks.generalStrict : blocks[key];\n\t                } else {\n\t                    block = blocks[key];\n\t                }\n\t                return {\n\t                    type: key,\n\t                    blocks: block\n\t                };\n\t            }\n\t        }\n\n\t        return {\n\t            type:   'unknown',\n\t            blocks: strictMode ? blocks.generalStrict : blocks.general\n\t        };\n\t    }\n\t};\n\n\tmodule.exports = CreditCardDetector;\n\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\tvar Util = {\n\t    noop: function () {\n\t    },\n\n\t    strip: function (value, re) {\n\t        return value.replace(re, '');\n\t    },\n\n\t    isDelimiter: function (letter, delimiter, delimiters) {\n\t        // single delimiter\n\t        if (delimiters.length === 0) {\n\t            return letter === delimiter;\n\t        }\n\n\t        // multiple delimiters\n\t        return delimiters.some(function (current) {\n\t            if (letter === current) {\n\t                return true;\n\t            }\n\t        });\n\t    },\n\n\t    getDelimiterREByDelimiter: function (delimiter) {\n\t        return new RegExp(delimiter.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1'), 'g');\n\t    },\n\n\t    stripDelimiters: function (value, delimiter, delimiters) {\n\t        var owner = this;\n\n\t        // single delimiter\n\t        if (delimiters.length === 0) {\n\t            var delimiterRE = delimiter ? owner.getDelimiterREByDelimiter(delimiter) : '';\n\n\t            return value.replace(delimiterRE, '');\n\t        }\n\n\t        // multiple delimiters\n\t        delimiters.forEach(function (current) {\n\t            value = value.replace(owner.getDelimiterREByDelimiter(current), '');\n\t        });\n\n\t        return value;\n\t    },\n\n\t    headStr: function (str, length) {\n\t        return str.slice(0, length);\n\t    },\n\n\t    getMaxLength: function (blocks) {\n\t        return blocks.reduce(function (previous, current) {\n\t            return previous + current;\n\t        }, 0);\n\t    },\n\n\t    // strip value by prefix length\n\t    // for prefix: PRE\n\t    // (PRE123, 3) -> 123\n\t    // (PR123, 3) -> 23 this happens when user hits backspace in front of \"PRE\"\n\t    getPrefixStrippedValue: function (value, prefix, prefixLength) {\n\t        if (value.slice(0, prefixLength) !== prefix) {\n\t            var diffIndex = this.getFirstDiffIndex(prefix, value.slice(0, prefixLength));\n\n\t            value = prefix + value.slice(diffIndex, diffIndex + 1) + value.slice(prefixLength + 1);\n\t        }\n\n\t        return value.slice(prefixLength);\n\t    },\n\n\t    getFirstDiffIndex: function (prev, current) {\n\t        var index = 0;\n\n\t        while (prev.charAt(index) === current.charAt(index)) {\n\t            if (prev.charAt(index++) === '') {\n\t                return -1;\n\t            }\n\t        }\n\n\t        return index;\n\t    },\n\n\t    getFormattedValue: function (value, blocks, blocksLength, delimiter, delimiters, delimiterLazyShow) {\n\t        var result = '',\n\t            multipleDelimiters = delimiters.length > 0,\n\t            currentDelimiter;\n\n\t        // no options, normal input\n\t        if (blocksLength === 0) {\n\t            return value;\n\t        }\n\n\t        blocks.forEach(function (length, index) {\n\t            if (value.length > 0) {\n\t                var sub = value.slice(0, length),\n\t                    rest = value.slice(length);\n\n\t                if (multipleDelimiters) {\n\t                    currentDelimiter = delimiters[delimiterLazyShow ? (index - 1) : index] || currentDelimiter;\n\t                } else {\n\t                    currentDelimiter = delimiter;\n\t                }\n\n\t                if (delimiterLazyShow) {\n\t                    if (index > 0) {\n\t                        result += currentDelimiter;\n\t                    }\n\n\t                    result += sub;\n\t                } else {\n\t                    result += sub;\n\n\t                    if (sub.length === length && index < blocksLength - 1) {\n\t                        result += currentDelimiter;\n\t                    }\n\t                }\n\n\t                // update remaining string\n\t                value = rest;\n\t            }\n\t        });\n\n\t        return result;\n\t    },\n\n\t    isAndroid: function () {\n\t        return navigator && /android/i.test(navigator.userAgent);\n\t    },\n\n\t    // On Android chrome, the keyup and keydown events\n\t    // always return key code 229 as a composition that\n\t    // buffers the user’s keystrokes\n\t    // see https://github.com/nosir/cleave.js/issues/147\n\t    isAndroidBackspaceKeydown: function (lastInputValue, currentInputValue) {\n\t        if (!this.isAndroid() || !lastInputValue || !currentInputValue) {\n\t            return false;\n\t        }\n\n\t        return currentInputValue === lastInputValue.slice(0, -1);\n\t    }\n\t};\n\n\tmodule.exports = Util;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\n\t/**\n\t * Props Assignment\n\t *\n\t * Separate this, so react module can share the usage\n\t */\n\tvar DefaultProperties = {\n\t    // Maybe change to object-assign\n\t    // for now just keep it as simple\n\t    assign: function (target, opts) {\n\t        target = target || {};\n\t        opts = opts || {};\n\n\t        // credit card\n\t        target.creditCard = !!opts.creditCard;\n\t        target.creditCardStrictMode = !!opts.creditCardStrictMode;\n\t        target.creditCardType = '';\n\t        target.onCreditCardTypeChanged = opts.onCreditCardTypeChanged || (function () {});\n\n\t        // phone\n\t        target.phone = !!opts.phone;\n\t        target.phoneRegionCode = opts.phoneRegionCode || 'AU';\n\t        target.phoneFormatter = {};\n\n\t        // date\n\t        target.date = !!opts.date;\n\t        target.datePattern = opts.datePattern || ['d', 'm', 'Y'];\n\t        target.dateFormatter = {};\n\n\t        // numeral\n\t        target.numeral = !!opts.numeral;\n\t        target.numeralIntegerScale = opts.numeralIntegerScale > 0 ? opts.numeralIntegerScale : 0;\n\t        target.numeralDecimalScale = opts.numeralDecimalScale >= 0 ? opts.numeralDecimalScale : 2;\n\t        target.numeralDecimalMark = opts.numeralDecimalMark || '.';\n\t        target.numeralThousandsGroupStyle = opts.numeralThousandsGroupStyle || 'thousand';\n\t        target.numeralPositiveOnly = !!opts.numeralPositiveOnly;\n\t        target.stripLeadingZeroes = opts.stripLeadingZeroes !== false;\n\n\t        // others\n\t        target.numericOnly = target.creditCard || target.date || !!opts.numericOnly;\n\n\t        target.uppercase = !!opts.uppercase;\n\t        target.lowercase = !!opts.lowercase;\n\n\t        target.prefix = (target.creditCard || target.date) ? '' : (opts.prefix || '');\n\t        target.noImmediatePrefix = !!opts.noImmediatePrefix;\n\t        target.prefixLength = target.prefix.length;\n\t        target.rawValueTrimPrefix = !!opts.rawValueTrimPrefix;\n\t        target.copyDelimiter = !!opts.copyDelimiter;\n\n\t        target.initValue = (opts.initValue !== undefined && opts.initValue !== null) ? opts.initValue.toString() : '';\n\n\t        target.delimiter =\n\t            (opts.delimiter || opts.delimiter === '') ? opts.delimiter :\n\t                (opts.date ? '/' :\n\t                    (opts.numeral ? ',' :\n\t                        (opts.phone ? ' ' :\n\t                            ' ')));\n\t        target.delimiterLength = target.delimiter.length;\n\t        target.delimiterLazyShow = !!opts.delimiterLazyShow;\n\t        target.delimiters = opts.delimiters || [];\n\n\t        target.blocks = opts.blocks || [];\n\t        target.blocksLength = target.blocks.length;\n\n\t        target.root = (typeof global === 'object' && global) ? global : window;\n\n\t        target.maxLength = 0;\n\n\t        target.backspace = false;\n\t        target.result = '';\n\n\t        return target;\n\t    }\n\t};\n\n\tmodule.exports = DefaultProperties;\n\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ })\n/******/ ])\n});\n;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/cleave.js/dist/cleave.js\n// module id = 743\n// module chunks = 27 34","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('b-field', [_c('b-input', {\n    directives: [{\n      name: \"cleave\",\n      rawName: \"v-cleave\",\n      value: (_vm.masks.creditCard),\n      expression: \"masks.creditCard\"\n    }],\n    attrs: {\n      \"placeholder\": \"Credit Card\"\n    }\n  })], 1), _vm._v(\" \"), _c('b-field', [_c('b-input', {\n    directives: [{\n      name: \"cleave\",\n      rawName: \"v-cleave\",\n      value: (_vm.masks.numeral),\n      expression: \"masks.numeral\"\n    }],\n    attrs: {\n      \"placeholder\": \"Numeral\"\n    }\n  })], 1), _vm._v(\" \"), _c('b-field', {\n    attrs: {\n      \"addons\": false\n    }\n  }, [_c('b-input', {\n    directives: [{\n      name: \"cleave\",\n      rawName: \"v-cleave\",\n      value: (_vm.masks.custom),\n      expression: \"masks.custom\"\n    }],\n    attrs: {\n      \"placeholder\": \"Custom\"\n    },\n    nativeOn: {\n      \"input\": function($event) {\n        _vm.getRawValue($event)\n      }\n    },\n    model: {\n      value: (_vm.value),\n      callback: function($$v) {\n        _vm.value = $$v\n      },\n      expression: \"value\"\n    }\n  }), _vm._v(\" \"), _c('p', [_c('b', [_vm._v(\"Formatted value (v-model)\")]), _vm._v(\": \" + _vm._s(_vm.value))]), _vm._v(\" \"), _c('p', [_c('b', [_vm._v(\"Raw value\")]), _vm._v(\": \" + _vm._s(_vm.rawValue))])], 1)], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-62f8b29c\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./docs/pages/extensions/cleavejs/examples/ExFormat.vue\n// module id = 827\n// module chunks = 27 34"],"sourceRoot":""}